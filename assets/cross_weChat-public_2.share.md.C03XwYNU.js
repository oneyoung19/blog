import{_ as i,c as a,o as n,b0 as e}from"./chunks/framework.CEggy_nf.js";const E=JSON.parse('{"title":"微信H5分享","description":"","frontmatter":{"title":"微信H5分享"},"headers":[],"relativePath":"cross/weChat-public/2.share.md","filePath":"cross/weChat-public/2.share.md","lastUpdated":1743686215000}'),t={name:"cross/weChat-public/2.share.md"};function l(p,s,h,k,d,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h2 id="_1-相关链接" tabindex="-1">1.相关链接 <a class="header-anchor" href="#_1-相关链接" aria-label="Permalink to &quot;1.相关链接&quot;">​</a></h2><p><a href="https://www.weixinsxy.com/jssdk/" target="_blank" rel="noreferrer">一个宝藏网址，可以用来调试所有的微信JS-SDK功能</a></p><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html" target="_blank" rel="noreferrer">微信JS-SDK官网文档网址</a></p><h2 id="_2-介绍" tabindex="-1">2.介绍 <a class="header-anchor" href="#_2-介绍" aria-label="Permalink to &quot;2.介绍&quot;">​</a></h2><p>公司启动了裂变活动，主要目的嘛，就是引流。</p><p>前端这方面的需求，<code>H5</code> 链接配置在公众号内，另外由于在微信内的<strong>普通链接分享</strong>不能自定义文本和图片，所以需要引入微信<code>JS-SDK</code>。所有需求，总结如下：</p><ul><li>自定义分享朋友</li><li>自定义分享朋友圈</li><li>生成海报，自动分享朋友圈</li></ul><h2 id="_1-获取sdk签名操作步骤" tabindex="-1">1.获取sdk签名操作步骤 <a class="header-anchor" href="#_1-获取sdk签名操作步骤" aria-label="Permalink to &quot;1.获取sdk签名操作步骤&quot;">​</a></h2><h3 id="_1-1-自定义分享" tabindex="-1">1-1.自定义分享 <a class="header-anchor" href="#_1-1-自定义分享" aria-label="Permalink to &quot;1-1.自定义分享&quot;">​</a></h3><p><strong>自定义分享朋友</strong>与<strong>自定义分享朋友圈</strong>主要利用到了两个 <code>API</code>：<code>updateAppMessageShareData</code> 和 <code>updateTimelineShareData</code>。具体步骤如下（生产环境要将测试公众号的配置修改为正式公众号）：</p><ul><li>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。</li><li>在 <code>JS</code> 文件内引入微信的 <code>JS-SDK</code>。<code>http://res2.wx.qq.com/open/js/jweixin-1.6.0.js</code>(支持 <code>https</code>)。它会暴露出 <code>wx</code> 这个全局对象。</li><li>开发环境下，先获取<a href="http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index" target="_blank" rel="noreferrer">测试公众号</a>的 <code>appID</code> 以及 <code>appSecrect</code>。</li><li>获取 <code>access_token</code>。<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>GET</code>请求方式：<code>https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=XXX&amp;secret=XXX</code></p><p>记得将 <code>XXX</code> 替换为对应的 <code>appID</code> 和 <code>appSecrect</code>。</p><p><strong><code>access_token</code> 有效期为 <code>7200s</code>。开发者必须在自己的服务全局缓存 <code>access_token</code>。</strong></p></div></li><li>获取 <code>jsapi_ticket</code>。<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>GET</code>请求方式：<code>https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=XXX&amp;type=jsapi</code></p><p>记得将 <code>XXX</code> 替换为上面获取到的 <code>access_token</code>。</p><p><code>jsapi_ticket</code> 是公众号用于调用微信JS接口的临时票据。正常情况下，<code>jsapi_ticket</code>的有效期为 <code>7200s</code>，通过 <code>access_token</code> 来获取。由于获取 <code>jsapi_ticket</code> 的 <code>api</code> 调用次数非常有限，频繁刷新<code>jsapi_ticket</code> 会导致 <code>api</code> 调用受限，影响自身业务，开发者必须在自己的服务全局缓存 <code>jsapi_ticket </code>。</p></div></li><li>根据 <code>location.href.split(&#39;#&#39;)[0]</code> 获取到前端 <code>URL</code>，该 <code>URL</code> 需要用来生成 <code>signature</code>。</li><li>利用该<a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign" target="_blank" rel="noreferrer">网址</a>生成 <code>signature</code>。 <strong>注意，在该网址配置的参数与后面 api 中的配置参数需要保持一致。</strong></li><li>至此，已经可以获取到所有参数，配置具体 <code>wx.config</code> 即可。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>实际开发过程中，后端同事需要根据参数将 <code>signature</code> 生成，返回给前端，这里可见具体的<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62" target="_blank" rel="noreferrer">生成算法</a>。可以理解为，上面的操作都是需要后端同事进行的。</p></div><p>一个简单的🌰代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 1.利用该 api 确定生成签名时需要定义好的 url</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // alert(location.href.split(&#39;#&#39;)[0])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // debug: true,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    appId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timestamp: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1617330761</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nonceStr: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nova&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signature: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;069cbd827636ce74bc1fb40c1b927875ddad56f0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必填，签名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsApiList: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;updateAppMessageShareData&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;updateTimelineShareData&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hideMenuItems&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;showMenuItems&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hideAllNonBaseMenuItem&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;showAllNonBaseMenuItem&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 分享给“朋友”</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateAppMessageShareData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateAppMessageShareData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;分享给朋友&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享标题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      desc: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这是用来测试微信分享给朋友的例子&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享描述</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      link: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://10.0.40.151:8084/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      imgUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://jsgoshu.cn/blog/avatar.jpeg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享图标</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 设置成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 分享给“朋友圈”</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateTimelineShareData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateTimelineShareData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;分享到朋友圈&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享标题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      link: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://10.0.40.151:8084/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      imgUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://jsgoshu.cn/blog/avatar.jpeg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分享图标</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 设置成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ready</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    updateAppMessageShareData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    updateTimelineShareData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 隐藏所有的非基础类操作菜单 想要显示的话调用：wx.showAllNonBaseMenuItem()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hideAllNonBaseMenuItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 显示 分享给朋友 和 分享到朋友圈</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showMenuItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      menuList: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;menuItem:share:appMessage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;menuItem:share:timeline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>额外注意的一点是，如果 <code>jsApiList</code> 列表中没有配置对应的 <code>api</code>，那么在调用该 <code>api</code> 时可能会报错 <code>permission denied</code>。</p><h3 id="_1-2-海报分享" tabindex="-1">1-2.海报分享 <a class="header-anchor" href="#_1-2-海报分享" aria-label="Permalink to &quot;1-2.海报分享&quot;">​</a></h3><p>我们的需求，没有根据页面，绘制出来海报。而只是一张本地图片的分享。所以没有用到 <code>html2canvas</code> 这个库。</p><p>主要研究了下，微信浏览器中的 <code>H5</code> 是否能够主动调起微信的 <strong>分享朋友圈</strong> 功能。</p><p>答案是不能。<strong>除非该 <code>H5</code> 套着原生的壳。</strong> 归根接底，是微信浏览器本身不支持，而且 <code>JS-SDK</code> 也没有提供方法。</p><p>而 <code>QQ</code> 浏览器和 <code>UC</code> 浏览器则是支持的。</p><p>如果你的需求不局限于微信浏览器，可以考虑做个向下的兼容方案。譬如：</p><p><strong>在微信浏览器中引导用户进行分享，在其他支持主动分享的浏览器中，监听分享事件，主动触发调起。</strong></p><p>我们的这部分需求后来砍掉了~ 😂</p><p>推荐几个链接提供思路，以防后面需要：</p><ul><li>浏览器的分享兼容库，<a href="https://zhuanlan.zhihu.com/p/27344615" target="_blank" rel="noreferrer">NativeShare</a>。我个人调试的时候，发现不是特别好用。<code>Demo</code> 在我的手机运行不了。</li><li><code>segmentfault</code> 关于 <code>H5</code> 分享的一个<a href="https://segmentfault.com/q/1010000019996373" target="_blank" rel="noreferrer">帖子</a></li></ul><h2 id="_2-界面操作" tabindex="-1">2.界面操作 <a class="header-anchor" href="#_2-界面操作" aria-label="Permalink to &quot;2.界面操作&quot;">​</a></h2><ul><li><p>关闭当前网页窗口接口</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li><p>右上角菜单（实际操作中发现是，微信底部弹窗操作栏中的上半部分，跟下面的 <code>hideAllNonBaseMenuItem</code> 效果类似）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 隐藏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hideOptionMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showOptionMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li><p>批量隐藏功能按钮接口</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hideMenuItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  menuList: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 要隐藏的菜单项，只能隐藏“传播类”和“保护类”按钮，所有menu项见下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li><li><p>批量显示功能按钮接口</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showMenuItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  menuList: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 要显示的菜单项，所有menu项见下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li><li><p>隐藏所有非基础按钮接口</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hideAllNonBaseMenuItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// “基本类”按钮详见下</span></span></code></pre></div></li><li><p>显示所有功能按钮接口</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showAllNonBaseMenuItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ul><h2 id="_3-菜单项列表" tabindex="-1">3.菜单项列表 <a class="header-anchor" href="#_3-菜单项列表" aria-label="Permalink to &quot;3.菜单项列表&quot;">​</a></h2><h3 id="基本类" tabindex="-1">基本类 <a class="header-anchor" href="#基本类" aria-label="Permalink to &quot;基本类&quot;">​</a></h3><ul><li><p>举报: &quot;menuItem:exposeArticle&quot;</p></li><li><p>调整字体: &quot;menuItem:setFont&quot;</p></li><li><p>日间模式: &quot;menuItem:dayMode&quot;</p></li><li><p>夜间模式: &quot;menuItem:nightMode&quot;</p></li><li><p>刷新: &quot;menuItem:refresh&quot;</p></li><li><p>查看公众号（已添加）: &quot;menuItem:profile&quot;</p></li><li><p>查看公众号（未添加）: &quot;menuItem:addContact&quot;</p></li></ul><h3 id="传播类" tabindex="-1">传播类 <a class="header-anchor" href="#传播类" aria-label="Permalink to &quot;传播类&quot;">​</a></h3><ul><li><p>发送给朋友: &quot;menuItem:share:appMessage&quot;</p></li><li><p>分享到朋友圈: &quot;menuItem:share:timeline&quot;</p></li><li><p>分享到QQ: &quot;menuItem:share:qq&quot;</p></li><li><p>分享到Weibo: &quot;menuItem:share:weiboApp&quot;</p></li><li><p>收藏: &quot;menuItem:favorite&quot;</p></li><li><p>分享到FB: &quot;menuItem:share:facebook&quot;</p></li><li><p>分享到 QQ 空间 &quot;menuItem:share:QZone&quot;</p></li></ul><h3 id="保护类" tabindex="-1">保护类 <a class="header-anchor" href="#保护类" aria-label="Permalink to &quot;保护类&quot;">​</a></h3><ul><li><p>编辑标签: &quot;menuItem:editTag&quot;</p></li><li><p>删除: &quot;menuItem:delete&quot;</p></li><li><p>复制链接: &quot;menuItem:copyUrl&quot;</p></li><li><p>原网页: &quot;menuItem:originPage&quot;</p></li><li><p>阅读模式: &quot;menuItem:readMode&quot;</p></li><li><p>在QQ浏览器中打开: &quot;menuItem:openWithQQBrowser&quot;</p></li><li><p>在Safari中打开: &quot;menuItem:openWithSafari&quot;</p></li><li><p>邮件: &quot;menuItem:share:email&quot;</p></li><li><p>一些特殊公众号: &quot;menuItem:share:brand&quot;</p></li></ul>`,34)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
