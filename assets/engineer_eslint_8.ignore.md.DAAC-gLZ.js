import{_ as i,o as a,c as n,aP as e}from"./chunks/framework.D1yHhm2y.js";const r=JSON.parse('{"title":"8.Ignore","description":"","frontmatter":{"title":"8.Ignore"},"headers":[],"relativePath":"engineer/eslint/8.ignore.md","filePath":"engineer/eslint/8.ignore.md","lastUpdated":1735989283000}'),t={name:"engineer/eslint/8.ignore.md"};function p(l,s,h,o,k,d){return a(),n("div",null,s[0]||(s[0]=[e(`<h2 id="_8-1-文件" tabindex="-1">8-1.文件 <a class="header-anchor" href="#_8-1-文件" aria-label="Permalink to &quot;8-1.文件&quot;">​</a></h2><p><code>Eslint</code> 可以针对单个文件、某些具有特定文件后缀的文件或者一个目录。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 针对单个文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./path/main.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 针对具有特定文件后缀的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ext</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .js,.vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 针对一个目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span></span></code></pre></div><p>后两种场景，还可以结合使用：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 针对src目录的.vue和.js文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ext</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .js,.vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span></span></code></pre></div><p>为了执行效率更高，在后两种场景下，我们就需要考虑结合 <code>.eslintignore</code> 来忽略特定文件。</p><p>譬如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_modules</span></span>
<span class="line"><span>plugins</span></span>
<span class="line"><span>.less</span></span>
<span class="line"><span>example.js</span></span></code></pre></div><p>在实际应用中，推荐将 <code>eslintignore</code> 作为项目的全局性配置。</p><p><code>.eslintignore</code> 文件<strong>默认需要创建在项目根目录下，放置在其他文件下并不会起作用</strong>。</p><p>如果想要后者情况，也能正常工作的话，可以使用命令行选项 <code>--ignore-path</code> 来手动指定 <code>.eslintignore</code> 的位置。</p><p>另外，如果上述两种情况都没有，那么 <code>Eslint</code> 会在 <code>package.json</code> 文件中查找 <code>eslintIgnore</code> 键：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mypackage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;eslintConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;browser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;eslintIgnore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_8-2-命令行" tabindex="-1">8-2.命令行 <a class="header-anchor" href="#_8-2-命令行" aria-label="Permalink to &quot;8-2.命令行&quot;">​</a></h2><p>这一节，还有两个相关的命令行选项，<code>--ignore-pattern</code> 与 <code>--no-ignore</code>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>除了使用 <code>.eslintignore</code> 文件等上述方式，还可以使用命令行选项 <code>--ignore-pattern</code> 来忽略文件。</p><p>如果想要忽略多个类型的文件的话，可以<strong>重复</strong> <code>--ignore-pattern</code> 该命令行选项以进行配置。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>--no-ignore</code> 命令行选项用来禁止忽略某些文件。</p><p><strong>实际的作用效果，是对该选项指定文件，进行额外 <code>lint</code> 操作</strong>。</p><p>也就说，如果某文件被忽略，或者可能被忽略，那么就可以加上该选项，强制 <code>Eslint</code> 对其进行检测。</p><p>该选项也可以通过重复配置以禁止忽略更多文件。</p></div>`,17)]))}const g=i(t,[["render",p]]);export{r as __pageData,g as default};
