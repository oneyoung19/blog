import{_ as i,o as a,c as n,aP as l}from"./chunks/framework.D1yHhm2y.js";const o=JSON.parse('{"title":"Offset","description":"","frontmatter":{"title":"Offset"},"headers":[],"relativePath":"FE/javascript/DOM/2.offset.md","filePath":"FE/javascript/DOM/2.offset.md","lastUpdated":1736069910000}'),e={name:"FE/javascript/DOM/2.offset.md"};function h(t,s,p,k,d,E){return a(),n("div",null,s[0]||(s[0]=[l(`<p>本文主要用来探讨与页面距离、元素大小相关的属性。</p><p><img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/main/img/008eGmZEly1goidy8t664j31330u0469.jpg" alt="" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>提前声明：本文中 <code>element</code> 指代的是元素节点，<code>event</code> 指代的是事件对象。</p></div><h2 id="_1-offset" tabindex="-1">1.offset <a class="header-anchor" href="#_1-offset" aria-label="Permalink to &quot;1.offset&quot;">​</a></h2><ol><li><p><code>element.offsetWidth</code> 元素的自身宽度。</p></li><li><p><code>element.offsetHeight</code> 元素的自身高度。</p></li><li><p><code>element.offsetParent</code> 元素的参考父元素(离元素最近的含有定位信息的祖先元素 即 <code>position</code> 为 <code>relative</code>、<code>absolute</code> 或者 <code>fixed</code>)</p></li><li><p><code>element.offsetTop</code> 元素距离参考父元素顶部的距离。</p></li><li><p><code>element.offsetLeft</code> 元素距离参考父元素左侧的距离。</p></li><li><p><code>event.offsetX</code> 鼠标相对于参考父元素的X轴坐标。</p></li><li><p><code>event.offsetY</code> 鼠标相对于参考父元素的Y轴坐标。</p></li></ol><h2 id="_2-client" tabindex="-1">2.client <a class="header-anchor" href="#_2-client" aria-label="Permalink to &quot;2.client&quot;">​</a></h2><ol><li><p><code>element.clientWidth</code> 元素可视尺寸的宽度。</p></li><li><p><code>element.clientHeight</code> 元素可视尺寸的高度。</p></li><li><p><code>event.clientX</code> 相对于浏览器的可视窗口(不包含浏览器顶部tab 书签等区域)的X轴坐标。</p></li><li><p><code>event.clientY</code> 相对于浏览器的可视窗口(不包含浏览器顶部tab 书签等区域)的Y轴坐标。</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>元素可视尺寸，包括 <code>padding</code>，但不包括 <code>border</code>、<code>margin</code>以及滚动条。</p></div><h2 id="_3-screen" tabindex="-1">3.screen <a class="header-anchor" href="#_3-screen" aria-label="Permalink to &quot;3.screen&quot;">​</a></h2><ol><li><code>event.screenX</code> 相对于浏览器的完整窗口(包含浏览器顶部tab 书签等区域)的X轴坐标。</li><li><code>event.screenY</code> 相对于浏览器的完整窗口(包含浏览器顶部tab 书签等区域)的Y轴坐标。</li></ol><h2 id="_4-page" tabindex="-1">4.page <a class="header-anchor" href="#_4-page" aria-label="Permalink to &quot;4.page&quot;">​</a></h2><ol><li><code>event.pageX</code> 相对于整个页面(也可以看做相对整个 <code>document</code>)的X轴坐标。</li><li><code>event.pageY</code> 相对于整个页面(也可以看做相对整个 <code>document</code>)的Y轴坐标。</li></ol><h2 id="_5-scroll" tabindex="-1">5.scroll <a class="header-anchor" href="#_5-scroll" aria-label="Permalink to &quot;5.scroll&quot;">​</a></h2><ol><li><code>element.scrollWidth</code> 元素可滚动宽度。</li><li><code>element.scrollHeight</code> 元素可滚动高度。</li><li><code>element.scrollTop</code> 元素距离容器顶部的滚动距离。</li><li><code>element.scrollLeft</code> 元素距离容器左侧的滚动距离。</li></ol><h2 id="_6-浏览器屏幕尺寸" tabindex="-1">6.浏览器屏幕尺寸 <a class="header-anchor" href="#_6-浏览器屏幕尺寸" aria-label="Permalink to &quot;6.浏览器屏幕尺寸&quot;">​</a></h2><p>分为两类，前者与浏览器是否缩放无关，后者与浏览器是否缩放相关。另外这里只标注下 <code>height</code>高度，<code>width</code> 宽度同理。</p><ol><li><p><code>window.screen.height</code> 与屏幕分辨率相关，只读属性，返回整个屏幕的宽高。</p></li><li><p><code>window.screen.availHeight</code> 浏览器的可用高度（我测试的结果 是包含了操作栏 但google时说此属性不包含操作栏）。</p></li><li><p><code>window.innerHeight</code> 不包含顶部操作栏的浏览器高度。</p></li><li><p><code>window.outerHeight</code> 包含顶部操作栏的浏览器高度。</p></li></ol><h2 id="ps-例子代码" tabindex="-1">ps.例子代码 <a class="header-anchor" href="#ps-例子代码" aria-label="Permalink to &quot;ps.例子代码&quot;">​</a></h2><p>写了个小例子，方便后面回顾。<a href="http://jsgoshu.cn/demo/DOM-offset/" target="_blank" rel="noreferrer">传送门</a></p><p>具体的 <code>js</code> 代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selector)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.parent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> child</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.child&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 1.offset */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素自身宽度 400</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetWidth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.offsetWidth)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素自身高度 800</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.offsetHeight)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素的参考父元素 (离元素最近的含有定位信息的祖先元素 即position为relative、absolute或者fixed) &#39;parent element&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetParent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.offsetParent)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素距离参考父元素顶部的距离 150</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetTop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.offsetTop)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素距离参考父元素左侧的距离 150</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetLeft&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.offsetLeft)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 2.client */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素可视尺寸（包括padding 但不包括border、margin以及滚动条）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clientWidth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.clientWidth)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clientHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.clientHeight)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 3.scroll */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素可滚动宽度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scrollWidth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.scrollWidth)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素可滚动高度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scrollHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.scrollHeight)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素距离容器顶部的距离</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scrollTop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.scrollTop)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 元素距离容器左侧的距离</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scrollLeft&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c.scrollLeft)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // mouseEvent 鼠标位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 相对于参考父元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.offsetX)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offsetY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.offsetY)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 相对于浏览器的可视窗口(不包含浏览器顶部tab 书签等区域)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clientX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.clientX)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clientY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.clientY)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 相对于整个页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pageX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.pageX)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pageY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.pageY)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 相对于浏览器的完整窗口(包含浏览器顶部tab 书签等区域)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screenX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.screenX)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screenY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.screenY)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ps: 其他尺寸 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 屏幕尺寸 该属性与浏览器是否全屏无关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screen.height&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, window.screen.height) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 屏幕分辨率相关</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 这三属性与浏览器是否全屏相关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screen.availHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, window.screen.availHeight) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 浏览器的可用高度（我测试的结果 是包含了操作栏 但google时说此属性不包含操作栏）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;window.innerHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, window.innerHeight) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不包含顶部操作栏</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;window.outterHeight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, window.outerHeight) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 包含顶部操作栏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,21)]))}const c=i(e,[["render",h]]);export{o as __pageData,c as default};
