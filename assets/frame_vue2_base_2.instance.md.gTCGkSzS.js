import{_ as o,c as t,o as c,b0 as d}from"./chunks/framework.CEggy_nf.js";const m=JSON.parse('{"title":"2.实例化","description":"","frontmatter":{"title":"2.实例化"},"headers":[],"relativePath":"frame/vue2/base/2.instance.md","filePath":"frame/vue2/base/2.instance.md","lastUpdated":1743686215000}'),a={name:"frame/vue2/base/2.instance.md"};function l(n,e,p,r,i,s){return c(),t("div",null,e[0]||(e[0]=[d("<p>只有当实例被创建时就已经存在于 <code>data</code> 中的 <code>property</code> 才是响应式的。</p><p><code>data</code> 的数据声明时，利用了 <code>Object.defineProperty</code>，绑定响应式。</p><p>如果部分数据不想要响应式，减少性能损耗，可以使用 <code>Object.freeze</code> 冻结。</p><p>挂载：</p><ol><li>利用 <code>el</code> 声明元素。</li><li>利用 <code>$mount</code> 方法。</li></ol><p>定义模板：</p><ol><li>利用 <code>render</code> 函数。优先级高于 <code>template</code>。</li><li>利用 <code>template</code> 属性。</li></ol><p>定义组件（只是定义好组件而已，具体使用还是依赖 <code>render</code> 或 <code>template</code>）：</p><ol><li><code>components</code> 局部注册。</li><li><code>Vue.component</code> 全局注册。</li></ol>",9)]))}const f=o(a,[["render",l]]);export{m as __pageData,f as default};
