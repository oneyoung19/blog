(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{653:function(_,v,t){"use strict";t.r(v);var e=t(40),r=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[t("code",[_._v("TLS")]),_._v("（"),t("code",[_._v("Transport Layer Security")]),_._v(" 传输层安全协议）和 "),t("code",[_._v("SSL")]),_._v("（"),t("code",[_._v("Secure Sockets Layer")]),_._v(" 安全套接层）都是用于加密和保护网络通信的协议。")]),_._v(" "),t("p",[_._v("它们的主要目的是确保在计算机之间传输的数据在传输过程中保持机密性和完整性，以防止未经授权的访问和数据篡改。")]),_._v(" "),t("p",[t("code",[_._v("SSL")]),_._v(" 是 "),t("code",[_._v("TLS")]),_._v(" 的前身，最早由网景公司（"),t("code",[_._v("Netscape")]),_._v("）于 "),t("code",[_._v("1994")]),_._v(" 年开发，用于安全地传输数据。")]),_._v(" "),t("p",[t("code",[_._v("SSL")]),_._v("的不同版本（如 "),t("code",[_._v("SSL 2.0")]),_._v(" 和 "),t("code",[_._v("SSL 3.0")]),_._v(" ）存在一些安全漏洞，因此被 "),t("code",[_._v("TLS")]),_._v(" 所取代。")]),_._v(" "),t("p",[t("code",[_._v("TLS")]),_._v(" 于 "),t("code",[_._v("1999")]),_._v(" 年首次发布，是 "),t("code",[_._v("SSL 3.0")]),_._v(" 的改进版本。")]),_._v(" "),t("p",[t("code",[_._v("TLS")]),_._v(" 的设计目标是修复 "),t("code",[_._v("SSL")]),_._v(" 的安全漏洞并提供更强大的加密和认证方法。"),t("code",[_._v("TLS 1.0")]),_._v("也被称为 "),t("code",[_._v("SSL 3.1")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"_1-对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对称加密"}},[_._v("#")]),_._v(" 1.对称加密")]),_._v(" "),t("p",[t("code",[_._v("Symmetric encryption")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/Not-Count-Contribution/img/symmetric-encryption.webp",alt:""}})]),_._v(" "),t("h2",{attrs:{id:"_2-非对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-非对称加密"}},[_._v("#")]),_._v(" 2.非对称加密")]),_._v(" "),t("p",[t("code",[_._v("Asymmetric encryption")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/Not-Count-Contribution/img/asymmetric-encryption.webp",alt:""}})]),_._v(" "),t("h2",{attrs:{id:"_3-https加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-https加密"}},[_._v("#")]),_._v(" 3.HTTPS加密")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/Not-Count-Contribution/img/https-encryption.webp",alt:""}})]),_._v(" "),t("p",[_._v("总的来说，如果我们将一次通信过程的双方，划分为 "),t("code",[_._v("Client")]),_._v(" 客户端和 "),t("code",[_._v("Server")]),_._v(" 服务端，那么在 "),t("code",[_._v("HTTPS")]),_._v(" 通信流程中涉及到两点：")]),_._v(" "),t("ol",[t("li",[t("strong",[_._v("身份验证")]),_._v("，即保证每次通信的双方都是可信的。")]),_._v(" "),t("li",[t("strong",[_._v("信息安全")]),_._v("，即保证每次通信的信息没有被篡改。")])]),_._v(" "),t("p",[_._v("下面，我们将通信过程，划分为"),t("strong",[_._v("请求阶段")]),_._v("和"),t("strong",[_._v("响应阶段")]),_._v("两个阶段，简单梳理下各个阶段是如何实现上述两点的。")]),_._v(" "),t("h3",{attrs:{id:"_3-1-请求阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-请求阶段"}},[_._v("#")]),_._v(" 3-1.请求阶段")]),_._v(" "),t("p",[_._v("在请求阶段中，采用"),t("strong",[_._v("非对称加密")]),_._v("：")]),_._v(" "),t("ol",[t("li",[_._v("客户端生成一段随机字节，即"),t("strong",[_._v("预主密钥")]),_._v("（"),t("code",[_._v("premaster secret")]),_._v("）;")]),_._v(" "),t("li",[_._v("客户端利用公钥将预主密钥进行信息加密；")]),_._v(" "),t("li",[_._v("客户端将加密的预主密钥发送到服务端；")]),_._v(" "),t("li",[_._v("服务端利用私钥将加密的预主密钥进行信息解密，得到预主密钥；")]),_._v(" "),t("li",[_._v("客户端和服务端会利用预主密钥，根据协商算法生成"),t("strong",[_._v("主密钥")]),_._v("；")]),_._v(" "),t("li",[_._v("最终，客户端和服务端利用主密钥，生成"),t("strong",[_._v("会话密钥")]),_._v("，在每一次通信中进行"),t("strong",[_._v("对称加密")]),_._v("使用。")])]),_._v(" "),t("p",[_._v("该阶段的信息流是 "),t("code",[_._v("Client => Server")]),_._v("。那么 "),t("code",[_._v("Server")]),_._v(" 要确定 "),t("code",[_._v("Client")]),_._v(" 的身份和信息。")]),_._v(" "),t("p",[_._v("该阶段安全性校验的实现方式如下：")]),_._v(" "),t("ol",[t("li",[t("strong",[_._v("身份验证")]),_._v("：最终通信会话，是依赖"),t("strong",[_._v("会话密钥")]),_._v("的，也就是每一次会话都能确保是建立连接的双方。")]),_._v(" "),t("li",[t("strong",[_._v("信息安全")]),_._v("：非对称加密的公钥加密信息只能由对应的私钥来解密。"),t("code",[_._v("RSA")]),_._v(" 算法很难破解。")])]),_._v(" "),t("h3",{attrs:{id:"_3-2-响应阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-响应阶段"}},[_._v("#")]),_._v(" 3-2.响应阶段")]),_._v(" "),t("p",[_._v("在响应阶段中，采用"),t("strong",[_._v("数字签名")]),_._v("：")]),_._v(" "),t("ol",[t("li",[_._v("服务端先利用 "),t("code",[_._v("Hash")]),_._v(" 算法对信息进行转码，生成不可逆的散列值；")]),_._v(" "),t("li",[_._v("然后利用私钥将散列值进行加密，加密结果即是"),t("strong",[_._v("数字签名")]),_._v("；")]),_._v(" "),t("li",[_._v("服务端将数字签名和完整的响应信息，传递给客户端；")]),_._v(" "),t("li",[_._v("客户端接收到数字签名后，先利用公钥进行解密，得到散列值 "),t("code",[_._v("A")]),_._v("；")]),_._v(" "),t("li",[_._v("然后客户端将响应信息利用相同的 "),t("code",[_._v("Hash")]),_._v(" 算法进行转码，得到散列值 "),t("code",[_._v("B")]),_._v("；")]),_._v(" "),t("li",[_._v("如果散列值 "),t("code",[_._v("A")]),_._v(" 和 "),t("code",[_._v("B")]),_._v(" 相同，则证明信息没有被篡改。反之，则已被篡改。")])]),_._v(" "),t("p",[_._v("该阶段的信息流是 "),t("code",[_._v("Server => Client")]),_._v("。那么 "),t("code",[_._v("Client")]),_._v(" 要确定 "),t("code",[_._v("Server")]),_._v(" 的身份和信息。")]),_._v(" "),t("p",[_._v("该阶段安全性校验的实现方式如下：")]),_._v(" "),t("ol",[t("li",[t("strong",[_._v("身份验证")]),_._v("：私钥加密的信息，只能通过对应公钥来解密；")]),_._v(" "),t("li",[t("strong",[_._v("信息安全")]),_._v("：利用了"),t("strong",[_._v("数字签名")]),_._v("的机制，会进行散列值比对，以确定信息是否被篡改。")])]),_._v(" "),t("h3",{attrs:{id:"_3-3-数字证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数字证书"}},[_._v("#")]),_._v(" 3-3.数字证书")]),_._v(" "),t("p",[_._v("上述两节梳理的两个阶段，都是在已经确立了公钥和私钥双方的情况下进行的。")]),_._v(" "),t("p",[_._v("但在实际业务中，要考虑怎么样交付公钥，也就是最初始步骤。")]),_._v(" "),t("p",[t("strong",[_._v("如何保证私钥服务器上的公钥能够正常交付给客户端，而且客户端能够确信这个公钥是目标服务端产生的")]),_._v("？")]),_._v(" "),t("p",[_._v("这部分需要依赖 "),t("code",[_._v("CA")]),_._v("（"),t("code",[_._v("Certificate Authority")]),_._v("）即"),t("strong",[_._v("证书颁发机构")]),_._v("。")]),_._v(" "),t("p",[_._v("证书颁发机构是一种第三方实体或组织，负责颁发"),t("strong",[_._v("数字证书")]),_._v("，以验证公共密钥的真实性和用户身份。")]),_._v(" "),t("p",[_._v("数字证书是一种用于加密通信和验证数据完整性的安全工具，通常用于 "),t("code",[_._v("HTTPS")]),_._v(" 连接、电子邮件加密、数字签名等场景。")]),_._v(" "),t("p",[_._v("数字证书的原理是这样的：")]),_._v(" "),t("ol",[t("li",[_._v("服务端需要向证书颁发机构申请数字证书；")]),_._v(" "),t("li",[_._v("证书颁发机构会生成密钥对，即公钥和私钥。这里的公钥一般被称作"),t("strong",[_._v("公共密钥")]),_._v("；")]),_._v(" "),t("li",[_._v("证书颁发机构会根据私钥和证书相关信息，加密生成"),t("strong",[_._v("数字签名")]),_._v("；")]),_._v(" "),t("li",[_._v("证书颁发机构会根据"),t("strong",[_._v("公共密钥")]),_._v("、"),t("strong",[_._v("数字签名")]),_._v("、"),t("strong",[_._v("持有人信息")]),_._v("、"),t("strong",[_._v("证书有效期")]),_._v("以及"),t("strong",[_._v("证书序列号")]),_._v("生成数字证书；")]),_._v(" "),t("li",[_._v("客户端在访问服务端时，会获取数字证书；")]),_._v(" "),t("li",[_._v("如果证书已经过期的话，客户端便会提示不可信等等；")]),_._v(" "),t("li",[_._v("如果证书有效，那么就可以利用"),t("strong",[_._v("公共密钥")]),_._v("对"),t("strong",[_._v("数字签名")]),_._v("进行解密，然后比对证书信息；")]),_._v(" "),t("li",[_._v("结果一致的话，那就证明公钥是可信的。")])]),_._v(" "),t("p",[_._v("其实总的来说：")]),_._v(" "),t("ol",[t("li",[_._v("初始的公钥交付以及验证功能，依赖于可信的第三方证书颁发机构。")]),_._v(" "),t("li",[_._v("证书验证功能，同样是数字签名的逻辑。")])]),_._v(" "),t("h2",{attrs:{id:"友情链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#友情链接"}},[_._v("#")]),_._v(" 友情链接")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000021494676",target:"_blank",rel:"noopener noreferrer"}},[_._v("HTTPS 详解一：附带最精美详尽的 HTTPS 原理图"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("数字签名是什么？ —— 阮一峰"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);