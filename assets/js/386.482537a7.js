(window.webpackJsonp=window.webpackJsonp||[]).push([[386],{847:function(e,_,v){"use strict";v.r(_);var t=v(40),r=Object(t.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"_1-chrome-devtools-performance"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-chrome-devtools-performance"}},[e._v("#")]),e._v(" 1.Chrome devtools - Performance")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29879682",target:"_blank",rel:"noopener noreferrer"}},[e._v("全新Chrome Devtool Performance使用指南"),v("OutboundLink")],1)]),e._v(" "),v("h3",{attrs:{id:"_1-1-fps"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-fps"}},[e._v("#")]),e._v(" 1-1.FPS")]),e._v(" "),v("p",[v("code",[e._v("frames per second")]),e._v(" 每秒帧数，也可以看做屏幕刷新率。")]),e._v(" "),v("p",[e._v("动画通常不低于 "),v("code",[e._v("60fps")]),e._v("，会比较流畅。")]),e._v(" "),v("p",[e._v("而电影一般为 "),v("code",[e._v("24fps")]),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"_1-2-cpu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-cpu"}},[e._v("#")]),e._v(" 1-2.CPU")]),e._v(" "),v("p",[v("code",[e._v("central processing Unit")]),e._v(" 中央处理器")]),e._v(" "),v("p",[v("code",[e._v("CPU")]),e._v(" 运行速率越高，处理速率会越快。")]),e._v(" "),v("h3",{attrs:{id:"_1-3-network"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-network"}},[e._v("#")]),e._v(" 1-3.Network")]),e._v(" "),v("p",[e._v("资源加载顺序")]),e._v(" "),v("h3",{attrs:{id:"_1-4-main"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-main"}},[e._v("#")]),e._v(" 1-4.Main")]),e._v(" "),v("p",[e._v("主线程 "),v("code",[e._v("Main thread")]),e._v("。")]),e._v(" "),v("p",[e._v("可以看到许多 "),v("code",[e._v("Task")]),e._v(" 任务。")]),e._v(" "),v("p",[e._v("同时，此处也是梳理 "),v("code",[e._v("CRP")]),e._v(" 的核心作用区域。")]),e._v(" "),v("p",[v("code",[e._v("CRP")]),e._v(" 即 "),v("code",[e._v("Critical Rendering Path")]),e._v("，"),v("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path",target:"_blank",rel:"noopener noreferrer"}},[e._v("关键渲染路径"),v("OutboundLink")],1),e._v("。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("DOM")])]),e._v(" "),v("li",[v("code",[e._v("CSSOM")])]),e._v(" "),v("li",[v("code",[e._v("Render Tree")])]),e._v(" "),v("li",[v("code",[e._v("Layout")])]),e._v(" "),v("li",[v("code",[e._v("Paint")])])]),e._v(" "),v("h2",{attrs:{id:"_2-crp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-crp"}},[e._v("#")]),e._v(" 2.CRP")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/main/img/npkz3z.png",alt:""}})]),e._v(" "),v("ol",[v("li",[e._v("浏览器会将HTML解析成一个 "),v("code",[e._v("DOM")]),e._v(" 树，"),v("code",[e._v("DOM")]),e._v(" 树的构建过程是一个深度遍历过程：当前节点的所有子节点都构建好后才会去构建当前节点的下一个兄弟节点。")]),e._v(" "),v("li",[e._v("将 "),v("code",[e._v("CSS")]),e._v(" 解析成 "),v("code",[e._v("CSS Rule Tree")]),e._v(" 。")]),e._v(" "),v("li",[e._v("根据 "),v("code",[e._v("DOM")]),e._v(" 树和 "),v("code",[e._v("CSSOM")]),e._v(" 来构造 "),v("code",[e._v("Rendering Tree")]),e._v("。注意："),v("code",[e._v("Rendering Tree")]),e._v(" 渲染树并不等同于 "),v("code",[e._v("DOM")]),e._v(" 树，因为一些像 "),v("code",[e._v("Header")]),e._v(" 或 "),v("code",[e._v("display:none")]),e._v(" 的东西就没必要放在渲染树中了。")]),e._v(" "),v("li",[e._v("有了 "),v("code",[e._v("Render Tree")]),e._v("，浏览器已经能知道网页中有哪些节点、各个节点的 "),v("code",[e._v("CSS")]),e._v(" 定义以及他们的从属关系。下一步操作称之为 "),v("code",[e._v("Layout")]),e._v("，顾名思义就是计算出每个节点在屏幕中的位置。")]),e._v(" "),v("li",[e._v("再下一步就是绘制，即遍历 "),v("code",[e._v("render")]),e._v(" 树，并使用 "),v("code",[e._v("UI")]),e._v(" 后端层绘制每个节点。")])]),e._v(" "),v("p",[e._v("上述这个过程是"),v("strong",[e._v("逐步完成")]),e._v("的（因为浏览器解析是单线程的），"),v("strong",[e._v("为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的 "),v("code",[e._v("html")]),e._v(" 都解析完成之后再去构建和布局 "),v("code",[e._v("render")]),e._v(" 树。它是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其余内容")]),e._v("。")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://kb.cnblogs.com/page/129756/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How Browsers work"),v("OutboundLink")],1),e._v(" "),v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Performance/How_browsers_work",target:"_blank",rel:"noopener noreferrer"}},[e._v("从输入URL到页面加载完成的过程中发生了什么？"),v("OutboundLink")],1),e._v(" "),v("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/55",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器工作原理"),v("OutboundLink")],1)]),e._v(" "),v("h3",{attrs:{id:"_2-1-重排与重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-重排与重绘"}},[e._v("#")]),e._v(" 2-1.重排与重绘")]),e._v(" "),v("p",[e._v("重排，即 "),v("code",[e._v("reflow")]),e._v("。也被称作回流。")]),e._v(" "),v("p",[e._v("重绘，即 "),v("code",[e._v("repaint")]),e._v("。")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://googlechrome.github.io/devtools-samples/jank/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jank Animation Demo"),v("OutboundLink")],1)]),e._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6844904083212468238",target:"_blank",rel:"noopener noreferrer"}},[e._v("掘金-重排(reflow)和重绘(repaint)"),v("OutboundLink")],1)]),e._v(" "),v("p",[v("a",{attrs:{href:"https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/#avoid-forced-synchronous-layouts",target:"_blank",rel:"noopener noreferrer"}},[e._v("重排(reflow)的触发时机"),v("OutboundLink")],1)]),e._v(" "),v("h3",{attrs:{id:"_2-2-避免重排与重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-避免重排与重绘"}},[e._v("#")]),e._v(" 2-2.避免重排与重绘")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("避免 "),v("code",[e._v("DOM")]),e._v(" 的回流。也就是尽量避免重排和重绘操作。\n减少 "),v("code",[e._v("JavaScript")]),e._v(" 脚本执行时间。有时 "),v("code",[e._v("JavaScript")]),e._v(" 函数的一次执行时间可能有几百毫秒，这就严重霸占了主线程执行其他渲染任务的时间。针对这种情况我们可以采用以下两种策略：")]),e._v(" "),v("p",[e._v("一种是将一次执行的函数分解为多个任务，使得每次的执行时间不要过久。"),v("a",{attrs:{href:"https://web.dev/optimize-long-tasks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Optimize long tasks"),v("OutboundLink")],1)]),e._v(" "),v("p",[e._v("另一种是采用 "),v("code",[e._v("Web Workers")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("DOM")]),e._v(" 操作相关的优化。\n浏览器有渲染引擎和 "),v("code",[e._v("JS")]),e._v(" 引擎，所以当用 "),v("code",[e._v("JS")]),e._v(" 操作 "),v("code",[e._v("DOM")]),e._v(" 时，这两个引擎要通过接口互相“交流”，因此每一次操作 "),v("code",[e._v("DOM")]),e._v("（包括只是访问 "),v("code",[e._v("DOM")]),e._v(" 的属性），都要进行引擎之间解析的开销，所以常说要减少 "),v("code",[e._v("DOM")]),e._v(" 操作。总结下来有以下几点：")])]),e._v(" "),v("li",[v("p",[e._v("缓存一些计算属性，如 "),v("code",[e._v("let left = el.offsetLeft")]),e._v("。")])]),e._v(" "),v("li",[v("p",[e._v("通过 "),v("code",[e._v("DOM")]),e._v(" 的 "),v("code",[e._v("class")]),e._v(" 来集中改变样式，而不是通过 "),v("code",[e._v("style")]),e._v(" 一条条的去修改。")])]),e._v(" "),v("li",[v("p",[e._v("分离读写操作。现代的浏览器都有渲染队列的机制。")])]),e._v(" "),v("li",[v("p",[e._v("放弃传统操作 "),v("code",[e._v("DOM")]),e._v(" 的时代，基于 "),v("code",[e._v("vue/react")]),e._v(" 等采用 "),v("code",[e._v("virtual dom")]),e._v(" 的框架。")])]),e._v(" "),v("li",[v("p",[e._v("合理利用 "),v("code",[e._v("CSS")]),e._v(" 合成动画。合成动画是直接在合成线程上执行的，这和在主线程上执行的布局、绘制等操作不同，如果主线程被 "),v("code",[e._v("JavaScript")]),e._v(" 或者一些布局任务占用，"),v("code",[e._v("CSS")]),e._v(" 动画依然能继续执行。所以要尽量利用好 "),v("code",[e._v("CSS")]),e._v(" 合成动画，如果能让 "),v("code",[e._v("CSS")]),e._v(" 处理动画，就尽量交给 "),v("code",[e._v("CSS")]),e._v(" 来操作。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("CSS")]),e._v(" 选择器优化。我们知道 "),v("code",[e._v("CSS")]),e._v(" 引擎查找是从右向左匹配的。所以基于此有以下几条优化方案：")])])]),e._v(" "),v("ul",[v("li",[e._v("尽量不要使用通配符")]),e._v(" "),v("li",[e._v("少用标签选择器")]),e._v(" "),v("li",[e._v("尽量利用属性继承特性")]),e._v(" "),v("li",[v("code",[e._v("CSS")]),e._v(" 属性优化。浏览器绘制图像时，"),v("code",[e._v("CSS")]),e._v(" 的计算也是耗费性能的，一些属性需浏览器进行大量的计算，属于昂贵的属性（"),v("code",[e._v("box-shadows")]),e._v("、"),v("code",[e._v("border-radius")]),e._v("、"),v("code",[e._v("transforms")]),e._v("、"),v("code",[e._v("filters")]),e._v("、"),v("code",[e._v("opcity")]),e._v("、"),v("code",[e._v(":nth-child")]),e._v(" 等），这些属性在日常开发中经常用到，所以并不是说不要用这些属性，而是在开发中，如果有其它简单可行的方案，那可以优先选择没有昂贵属性的方案。")])]),e._v(" "),v("ol",{attrs:{start:"9"}},[v("li",[e._v("避免频繁的垃圾回收。我们知道 "),v("code",[e._v("JavaScript")]),e._v(" 使用了自动垃圾回收机制，如果在一些函数中频繁创建临时对象，那么垃圾回收器也会频繁地去执行垃圾回收策略。这样当垃圾回收操作发生时，就会占用主线程，从而影响到其他任务的执行，严重的话还会让用户产生掉帧、不流畅的感觉。")])]),e._v(" "),v("h2",{attrs:{id:"_3-page-life-cycle"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-page-life-cycle"}},[e._v("#")]),e._v(" 3.Page Life Cycle")]),e._v(" "),v("p",[e._v("页面性能指标节点：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("FP")]),e._v(" "),v("a",{attrs:{href:"https://stackoverflow.com/questions/61816232/how-to-measure-first-paint-fp",target:"_blank",rel:"noopener noreferrer"}},[e._v("First Paint"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("code",[e._v("FCP")]),e._v(" "),v("a",{attrs:{href:"https://web.dev/i18n/zh/fcp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("First Contentful Paint"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("code",[e._v("LCP")]),e._v(" "),v("a",{attrs:{href:"https://web.dev/i18n/zh/lcp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Largest Contentful Paint"),v("OutboundLink")],1)])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[e._v("Document.readyState状态")]),e._v(" "),v("th",{staticStyle:{"text-align":"center"}},[e._v("DOM事件")]),e._v(" "),v("th")])]),e._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[e._v("loading")]),e._v(" "),v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td")]),e._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[e._v("interactive")]),e._v(" "),v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td")]),e._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/DOMContentLoaded_event",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOMContentLoaded"),v("OutboundLink")],1),e._v(" (HTML文档加载完毕 其他静态资源链接正在加载)")]),e._v(" "),v("td")]),e._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td",[e._v("属性为defer的script脚本执行")])]),e._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[e._v("complete")]),e._v(" "),v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td")]),e._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),e._v(" "),v("td",{staticStyle:{"text-align":"center"}},[e._v("load（页面完全加载完毕）")]),e._v(" "),v("td")])])]),e._v(" "),v("h2",{attrs:{id:"_5-template多页面脚手架开发环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-template多页面脚手架开发环境"}},[e._v("#")]),e._v(" 5.template多页面脚手架开发环境")]),e._v(" "),v("p",[e._v("背景：")]),e._v(" "),v("p",[v("code",[e._v("jquery")]),e._v(" 结合 "),v("code",[e._v("template")]),e._v(" 模板的多页面项目。")]),e._v(" "),v("p",[e._v("现象：")]),e._v(" "),v("p",[e._v("在开发环境下，页面加载渲染时，会先出现 "),v("strong",[e._v("布局变形")]),e._v("，然后回归正常。")]),e._v(" "),v("p",[e._v("而生产环境下，展示正常。")]),e._v(" "),v("p",[e._v("有一种比较学术的说法是"),v("strong",[e._v("累计布局偏移")]),e._v("，"),v("code",[e._v("Cumulative Layout Shift")]),e._v(" 简称为 "),v("code",[e._v("CLS")]),e._v("。")]),e._v(" "),v("p",[e._v("该指标极大程度上影响用户体验。")]),e._v(" "),v("p",[e._v("经过一番调试发现，"),v("code",[e._v("template")]),e._v(" 多页面应用在生产环境下的打包结果，与开发环境并不一致。")]),e._v(" "),v("p",[e._v("主要点是 "),v("code",[e._v("CSS")]),e._v(" 的加载时机不一致。")]),e._v(" "),v("p",[e._v("在开发环境下，"),v("code",[e._v("webpack")]),e._v(" 使用的是 "),v("code",[e._v("style-loader")]),e._v("，这样 "),v("code",[e._v("CSS")]),e._v(" 会打包进页面底部的 "),v("code",[e._v("JS")]),e._v(" 中，然后 "),v("code",[e._v("JS")]),e._v(" 创建 "),v("code",[e._v("<style>")]),e._v(" 标签，添加到 "),v("code",[e._v("<head>")]),e._v(" 标签中。")]),e._v(" "),v("p",[e._v("可想而知，页面加载时，先 "),v("code",[e._v("parse HTML")]),e._v("，结合 "),v("code",[e._v("user agent style")]),e._v(" 形成页面基本结构。执行到底部 "),v("code",[e._v("<script>")]),e._v(" 后，拉取脚本并创建 "),v("code",[e._v("<style>")]),e._v("，此时会发生 "),v("strong",[e._v("重排")]),e._v("。因此页面的表现，会先变形，然后回复正常。")]),e._v(" "),v("p",[e._v("而在生产环境下，"),v("code",[e._v("webpack")]),e._v(" 使用的是 "),v("code",[e._v("mini-css-extract-plugin")]),e._v("，这样 "),v("code",[e._v("CSS")]),e._v(" 在构建结束之后，会由 "),v("code",[e._v("<link>")]),e._v(" 标签插入到 "),v("code",[e._v("<head>")]),e._v(" 标签中。")]),e._v(" "),v("p",[e._v("这种情形下，页面加载时，先 "),v("code",[e._v("parse HTML")]),e._v("，然后 "),v("code",[e._v("recalcute style")]),e._v("，之后 "),v("code",[e._v("layout => pre-paint => paint")]),e._v("。这个过程很快，因此用户感知不到 "),v("code",[e._v("layout")]),e._v(" 偏移。")]),e._v(" "),v("p",[e._v("在上述过程结束之后，继续 "),v("code",[e._v("parse HTML")]),e._v("，逐步执行 "),v("code",[e._v("<script>")]),e._v("，这时有可能发生"),v("strong",[e._v("重排")]),e._v("或者"),v("strong",[e._v("重绘")]),e._v("。")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("要注意的一点是，浏览器并不会等到完全 "),v("code",[e._v("parse HTML")]),e._v(" 之后，再去 "),v("code",[e._v("layout")]),e._v("、"),v("code",[e._v("paint")]),e._v(" 等。而是逐段 "),v("code",[e._v("parse HTML")]),e._v("，尽可能提前展示给用户一部分页面。")]),e._v(" "),v("p",[e._v("这对于用户体验，无疑是一种优化。")])]),e._v(" "),v("p",[e._v("关于 "),v("code",[e._v("vue")]),e._v(" 等单页面应用的开发环境，并无上述问题。笔者认为单页面应用的 "),v("code",[e._v("HTML DOM")]),e._v(" 结构，本身是由 "),v("code",[e._v("JS")]),e._v(" 生成的。因此在执行时机上是有差异。")]),e._v(" "),v("p",[e._v("譬如单页面应用的开发环境，也是先 "),v("code",[e._v("parse HHTML")]),e._v("，但此时页面中只有 "),v("code",[e._v('<div id="app"></div>')]),e._v(" 这样的结构，只有等执行到 "),v("code",[e._v("<script>")]),e._v(" 才会创建 "),v("code",[e._v("DOM")]),e._v(" 以及 "),v("code",[e._v("<style>")]),e._v(" 标签。")])])}),[],!1,null,null,null);_.default=r.exports}}]);