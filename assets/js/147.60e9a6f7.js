(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{604:function(t,v,_){"use strict";_.r(v);var a=_(40),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("推荐一个学习仓库"),_("a",{attrs:{href:"https://github.com/krahets/hello-algo",target:"_blank",rel:"noopener noreferrer"}},[t._v("hello-algo"),_("OutboundLink")],1),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"_1-定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1.定义")]),t._v(" "),_("p",[_("strong",[t._v("数据结构")]),t._v("（"),_("code",[t._v("data structure")]),t._v("）是组织和存储数据的方式，涵盖数据内容、数据之间关系和数据操作方法，它具有以下设计目标：")]),t._v(" "),_("ol",[_("li",[t._v("空间占用尽量少，以节省计算机内存。")]),t._v(" "),_("li",[t._v("数据操作尽可能快速，涵盖数据访问、添加、删除、更新等。")]),t._v(" "),_("li",[t._v("提供简洁的数据表示和逻辑信息，以便算法高效运行。")])]),t._v(" "),_("p",[t._v("数据结构设计是一个充满权衡的过程。如果想在某方面取得提升，往往需要在另一方面作出妥协：")]),t._v(" "),_("ol",[_("li",[t._v("链表相较于数组，在数据添加和删除操作上更加便捷，但牺牲了数据访问速度。")]),t._v(" "),_("li",[t._v("图相较于链表，提供了更丰富的逻辑信息，但需要占用更大的内存空间。")])]),t._v(" "),_("h2",{attrs:{id:"_2-种类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-种类"}},[t._v("#")]),t._v(" 2.种类")]),t._v(" "),_("ol",[_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/1.array.html"}},[t._v("数组")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/2.linked-list.html"}},[t._v("链表")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/3.stack.html"}},[t._v("栈")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/4.queue.html"}},[t._v("队列")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/5.hash-table.html"}},[t._v("哈希表")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/6.tree.html"}},[t._v("树")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/7.heap.html"}},[t._v("堆")])],1)]),t._v(" "),_("li",[_("p",[_("RouterLink",{attrs:{to:"/cs/advance/data-structures/8.graph.html"}},[t._v("图")])],1)])]),t._v(" "),_("h2",{attrs:{id:"_3-与算法的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-与算法的关系"}},[t._v("#")]),t._v(" 3.与算法的关系")]),t._v(" "),_("p",[t._v("数据结构与算法高度相关、紧密结合，具体表现在以下三个方面：")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("数据结构是算法的基石")]),t._v("。数据结构为算法提供了结构化存储的数据，以及操作数据的方法。")]),t._v(" "),_("li",[_("strong",[t._v("算法是数据结构发挥作用的舞台")]),t._v("。数据结构本身仅存储数据信息，结合算法才能解决特定问题。")]),t._v(" "),_("li",[_("strong",[t._v("算法通常可以基于不同的数据结构实现")]),t._v("，但执行效率可能相差很大，选择合适的数据结构是关键。")])]),t._v(" "),_("p",[t._v("如果将"),_("strong",[t._v("数据结构")]),t._v("与"),_("strong",[t._v("算法")]),t._v("类比为"),_("strong",[t._v("拼装积木")]),t._v("：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[t._v("数据结构与算法")])]),t._v(" "),_("th",[_("strong",[t._v("拼装积木")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("输入数据")]),t._v(" "),_("td",[t._v("未拼装的积木")])]),t._v(" "),_("tr",[_("td",[t._v("数据结构")]),t._v(" "),_("td",[t._v("积木组织形式，包括形状、大小、连接方式等")])]),t._v(" "),_("tr",[_("td",[t._v("算法")]),t._v(" "),_("td",[t._v("把积木拼成目标形态的一系列操作步骤")])]),t._v(" "),_("tr",[_("td",[t._v("输出数据")]),t._v(" "),_("td",[t._v("积木模型")])])])]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("在实际讨论时，我们通常会将 "),_("code",[t._v("数据结构与算法")]),t._v(" 简称为 "),_("code",[t._v("算法")]),t._v("。")]),t._v(" "),_("p",[t._v("比如众所周知的 "),_("code",[t._v("LeetCode")]),t._v(" 算法题目，实际上同时考查数据结构和算法两方面的知识。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);