(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{639:function(s,e,t){"use strict";t.r(e);var a=t(40),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_3-1-比较运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-比较运算"}},[s._v("#")]),s._v(" 3-1.比较运算")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("算数运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("+")]),s._v(" 加法")]),s._v(" "),t("li",[t("code",[s._v("-")]),s._v(" 减法")]),s._v(" "),t("li",[t("code",[s._v("*")]),s._v(" 乘法")]),s._v(" "),t("li",[t("code",[s._v("/")]),s._v(" 除法")]),s._v(" "),t("li",[t("code",[s._v("%")]),s._v(" 取余")]),s._v(" "),t("li",[t("code",[s._v("=")]),s._v(" 赋值")]),s._v(" "),t("li",[t("code",[s._v("==")]),s._v(" 相等。用于比较两个数字，相等则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("!=")]),s._v(" 不相等。用于比较两个数字，不相同则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[s._v("注意：条件表达式要放在方括号之间，并且要有空格，例如: "),t("code",[s._v("[$a==$b]")]),s._v(" 是错误的，必须写成 "),t("code",[s._v("[ $a == $b ]")]),s._v("。")])])]),s._v(" "),t("li",[t("p",[s._v("关系运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("-eq")]),s._v(" 等于")]),s._v(" "),t("li",[t("code",[s._v("-gt")]),s._v(" 大于")]),s._v(" "),t("li",[t("code",[s._v("-lt")]),s._v(" 小于")]),s._v(" "),t("li",[t("code",[s._v("-ge")]),s._v(" 大于或等于")]),s._v(" "),t("li",[t("code",[s._v("-le")]),s._v(" 小于或等于")]),s._v(" "),t("li",[t("code",[s._v("-ne")]),s._v(" 不等于")])])]),s._v(" "),t("li",[t("p",[s._v("布尔运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("-o")]),s._v(" 或运算。有一个表达式为 "),t("code",[s._v("true")]),s._v(" 则返回 "),t("code",[s._v("true")]),s._v("。"),t("code",[s._v("[ $a -lt 20 -o $b -gt 100 ]")]),s._v(" 返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-a")]),s._v(" 且运算。两个表达式都为 "),t("code",[s._v("true")]),s._v(" 才返回 "),t("code",[s._v("true")]),s._v("。"),t("code",[s._v("[ $a -lt 20 -a $b -gt 100 ]")]),s._v(" 返回 "),t("code",[s._v("false")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("!")]),s._v(" 非运算。表达式为 "),t("code",[s._v("true")]),s._v(" 则返回 "),t("code",[s._v("false")]),s._v("，否则返回 "),t("code",[s._v("true")]),s._v("。"),t("code",[s._v("[ ! false ]")]),s._v(" 返回 "),t("code",[s._v("true")]),s._v("。")])])]),s._v(" "),t("li",[t("p",[s._v("逻辑运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("&&")]),s._v(" 逻辑的 "),t("code",[s._v("AND")]),s._v("。"),t("code",[s._v("[[ $a -lt 100 && $b -gt 100 ]]")]),s._v(" 返回 "),t("code",[s._v("false")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("||")]),s._v(" 逻辑的 "),t("code",[s._v("OR")]),s._v("。"),t("code",[s._v("[[ $a -lt 100 || $b -gt 100 ]]")]),s._v(" 返回 "),t("code",[s._v("true")]),s._v("。")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("逻辑运算符与布尔运算符，看上去一样。但是它俩有两点区别：")]),s._v(" "),t("ul",[t("li",[s._v("使用逻辑运算符需要加上 "),t("code",[s._v("[[双大括号]]")]),s._v("，布尔运算符只需要 "),t("code",[s._v("[单大括号]")]),s._v("。")]),s._v(" "),t("li",[s._v("逻辑运算符具有特殊的"),t("strong",[s._v("短路")]),s._v("功能，可以利用短路特性来实现使用 "),t("code",[s._v("cmd1")]),s._v(" 的执行结果控制 "),t("code",[s._v("cmd2")]),s._v(" 是否执行的效果。")])])])]),s._v(" "),t("li",[t("p",[s._v("字符串运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("=")]),s._v(" 检测两个字符串是否相等，相等返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("!=")]),s._v(" 检测两个字符串是否不相等，不相等返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-z")]),s._v(" 检测字符串长度是否为 "),t("code",[s._v("0")]),s._v("，为 "),t("code",[s._v("0")]),s._v(" 返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-n")]),s._v(" 检测字符串长度是否不为 "),t("code",[s._v("0")]),s._v("，不为 "),t("code",[s._v("0")]),s._v(" 返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("$")]),s._v(" 检测字符串是否为空，不为空返回 "),t("code",[s._v("true")]),s._v("。")])])]),s._v(" "),t("li",[t("p",[s._v("文件测试运算符")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("-b file")]),s._v(" 检测文件是否是块设备文件，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-c file")]),s._v(" 检测文件是否是字符设备文件，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-d file")]),s._v(" 检测文件是否是目录，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-f file")]),s._v(" 检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-r file")]),s._v(" 检测文件是否可读，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-w file")]),s._v(" 检测文件是否可写，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-x file")]),s._v(" 检测文件是否可执行，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-s file")]),s._v(" 检测文件是否为空（文件大小是否大于 "),t("code",[s._v("0")]),s._v(" ），不为空返回 "),t("code",[s._v("true")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("-e file")]),s._v(" 检测文件（包括目录）是否存在，如果是，则返回 "),t("code",[s._v("true")]),s._v("。")])])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("ul",[t("li",[s._v("在 "),t("code",[s._v("shell")]),s._v(" 中，每个语句执行完后，都会返回一个状态码，取值在 "),t("code",[s._v("[0 - 255]")]),s._v(" 区间内。如果是 "),t("code",[s._v("0")]),s._v(" 的话，表示语句执行结果是 "),t("code",[s._v("true")]),s._v(", 否则是 "),t("code",[s._v("false")]),s._v("。通常可用 "),t("code",[s._v("$?")]),s._v(" 来访问该状态码。")]),s._v(" "),t("li",[t("code",[s._v("test")]),s._v(" 命令是 "),t("code",[s._v("shell")]),s._v(" 环境中用于测试条件表达式的工具。结合上一条，我们就可以判断测试语句的结果："),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" -lt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#因为2不小于2 所以结果是false。将会打印除0以外的数字：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])])]),s._v(" "),t("h2",{attrs:{id:"_3-2-判断语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-判断语句"}},[s._v("#")]),s._v(" 3-2.判断语句")]),s._v(" "),t("p",[s._v("下述判断语句中的中括号 "),t("code",[s._v("[]")]),s._v(" 也可以使用 "),t("code",[s._v("test")]),s._v(" 命令来代替。看个人习惯。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("if ... fi")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("也可以写成：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("expression")]),s._v(" 与中括号 "),t("code",[s._v("[]")]),s._v(" 之间需要有空格。")]),s._v(" "),t("li",[t("code",[s._v("if")]),s._v(" 与 "),t("code",[s._v("then")]),s._v(" 写在同一行的话，需要用分号 "),t("code",[s._v(";")]),s._v(" 来分隔。")])])])]),s._v(" "),t("li",[t("p",[s._v("if ... else ... fi")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression is not true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("if ... elif ... fi")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression1 is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression2 is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" expression3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Statements to be executed if expression3 is true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_3-3-循环语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-循环语句"}},[s._v("#")]),s._v(" 3-3.循环语句")]),s._v(" "),t("p",[s._v("循环语句分为3种。分别为 "),t("code",[s._v("for")]),s._v("、"),t("code",[s._v("while")]),s._v(" 及 "),t("code",[s._v("until")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("for")]),s._v(" 循环。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v1'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里应该使用${arr[*]} 读取到数组中的所有值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("variable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${variable}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("while")]),s._v(" 循环")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(()) 可用于数学计算")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("${num} "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${num}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"num++"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("也可以写作：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#利用判断表达式 中括号或者test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${num}")]),s._v(" -le "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${num}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"num++"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("对 "),t("code",[s._v("let")]),s._v(" 命令有异议的话，可见"),t("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-let.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("链接"),t("OutboundLink")],1),s._v("。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("until")]),s._v(" 循环")]),s._v(" "),t("p",[t("code",[s._v("until")]),s._v(" 循环执行一系列命令直至条件为 "),t("code",[s._v("true")]),s._v(" 时停止。")]),s._v(" "),t("p",[t("code",[s._v("until")]),s._v(" 循环与 "),t("code",[s._v("while")]),s._v(" 循环在处理方式上刚好相反。")]),s._v(" "),t("p",[s._v("一般 "),t("code",[s._v("while")]),s._v(" 循环优于 "),t("code",[s._v("until")]),s._v(" 循环，但在某些时候—也只是极少数情况下，"),t("code",[s._v("until")]),s._v(" 循环更加有用。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#打印数字 知道该数字大于等于5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${num}")]),s._v(" -ge "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${num}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" num++\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_3-4-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-函数"}},[s._v("#")]),s._v(" 3-4.函数")]),s._v(" "),t("p",[t("code",[s._v("Shell")]),s._v(" 中也有函数的概念。基本形式如下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#function前缀可省略")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("fun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a shell function"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取函数传参")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取10位及10位以后的传参")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${10}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#返回值如果设定的话 只能在0-255之间 即使超过也会默认以0-255循环")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("125")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意调用的时候不用带小括号()")]),s._v("\nfun\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#利用$?可获取函数返回值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果要传参的话 如下：")]),s._v("\nfun "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("总结下：")]),s._v(" "),t("ul",[t("li",[s._v("可以带 "),t("code",[s._v("function fun()")]),s._v(" 定义，也可以直接 "),t("code",[s._v("fun()")]),s._v(" 定义，不带任何参数。")]),s._v(" "),t("li",[s._v("参数返回，可以显示加 "),t("code",[s._v("return")]),s._v(" 返回，如果不加，将以最后一条命令运行结果，作为返回值。 "),t("code",[s._v("return")]),s._v(" 后跟数值 "),t("code",[s._v("n(0-255)")]),s._v("。")]),s._v(" "),t("li",[s._v("函数参数相关如下：\n"),t("ul",[t("li",[t("code",[s._v("${n}")]),s._v("  用来获取第 "),t("code",[s._v("n")]),s._v(" 位的参数。")]),s._v(" "),t("li",[t("code",[s._v("$#")]),s._v(" 用来获取参数的总个数。")]),s._v(" "),t("li",[t("code",[s._v("$*")]),s._v(" 用来获取所有的参数。")]),s._v(" "),t("li",[t("code",[s._v("$?")]),s._v(" 显示最后命令的退出状态。"),t("code",[s._v("0")]),s._v(" 表示没有错误，其他任何值表明有错误。")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);