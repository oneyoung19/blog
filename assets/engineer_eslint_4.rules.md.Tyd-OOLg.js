import{_ as i,c as e,o as a,b0 as n}from"./chunks/framework.D8aj9ziZ.js";const k=JSON.parse('{"title":"4.Rules","description":"","frontmatter":{"title":"4.Rules"},"headers":[],"relativePath":"engineer/eslint/4.rules.md","filePath":"engineer/eslint/4.rules.md","lastUpdated":1749894304000}'),l={name:"engineer/eslint/4.rules.md"};function t(o,s,p,d,c,h){return a(),e("div",null,s[0]||(s[0]=[n(`<p>属性 <code>rules</code> 是 <code>Eslint</code> 的核心。</p><p>所有的规则都依赖此属性来定义。</p><h2 id="_4-1-规则等级" tabindex="-1">4-1.规则等级 <a class="header-anchor" href="#_4-1-规则等级" aria-label="Permalink to &quot;4-1.规则等级&quot;">​</a></h2><p><code>rules</code> 的规则等级有：</p><ol><li><code>off</code> <code>0</code> 规则关闭。</li><li><code>warn</code> <code>1</code> 警告级别，不会影响代码执行。</li><li><code>error</code> <code>2</code> 错误级别，阻断代码执行。</li></ol><h2 id="_4-2-配置方式" tabindex="-1">4-2.配置方式 <a class="header-anchor" href="#_4-2-配置方式" aria-label="Permalink to &quot;4-2.配置方式&quot;">​</a></h2><p><code>rules</code> 的配置方式有 <code>4</code> 种：</p><ol><li>通过代码注释(<strong>权重最高</strong>)。如果想要禁止使用代码注释来设置的话，可以使用 <code>noInlineConfig: true</code> 来禁用。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint semi: &quot;warn&quot;, quotes: [&quot;error&quot;, &quot;double&quot;] </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">需要冒号 双引号</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>代码注释这种方式的配置 <code>rules</code>，在该文件内全局生效，<strong>该注释的书写位置并不影响实际的检测结果</strong>。</p><p>这种注释不起作用 <code>// eslint semi: &quot;warn&quot;</code>，推荐使用这种形式 <code>/* eslint semi: &quot;warn&quot; */</code></p><p>还可以利用 <code>--</code> 为注释添加额外说明，方便使用者的后期维护。（两个或两个以上的 <code>-</code>）</p></div><ol><li>通过命令行参数。</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{semi: warn, eqeqeq: [error]}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;semi: warn&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;eqeqeq: [error]&#39;</span></span></code></pre></div><ol start="3"><li>通过 <code>.eslintrc.*</code> 配置文件。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rules: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    semi: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;warn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    eqeqeq: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;double&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="4"><li>通过 <code>package.json</code> 文件中的 <code>eslintConfig: { rules: {} }</code></li></ol><h2 id="_4-3-来源分类" tabindex="-1">4-3.来源分类 <a class="header-anchor" href="#_4-3-来源分类" aria-label="Permalink to &quot;4-3.来源分类&quot;">​</a></h2><p><code>rules</code> 的来源分类有 <code>4</code> 种：</p><ol><li>自定义 <code>rules</code>。</li><li><code>eslint</code> 的内置 <code>rules</code>，可以通过 <code>extends: &quot;eslint:recommend&quot;</code> 引入。</li><li>通过 <code>eslint-config-*</code> 等相关扩展引入，譬如 <code>exetends: &quot;eslint-config-airbnb-base&quot;</code>。</li><li>通过 <code>eslint-plugin-*</code> 等相关插件引入，譬如 <code>extends: &quot;plugin:vue/essential&quot;</code>，利用的是 <code>eslint-plugin-vue</code>。</li></ol><h2 id="_4-4-禁用与启用" tabindex="-1">4-4.禁用与启用 <a class="header-anchor" href="#_4-4-禁用与启用" aria-label="Permalink to &quot;4-4.禁用与启用&quot;">​</a></h2><p><code>rules</code> 的禁用与启用有 <code>2</code> 种方式：</p><ol><li>通过代码注释中的 <code>disable</code> 与 <code>enable</code> 来声明。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable -- 禁用该行以下的所有规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable no-console, semi -- 禁用该行以下的某些规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable-line -- 禁用该行的所有规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable-line no-console, semi -- 禁用该行的某些规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable-next-line -- 禁用下一行的所有规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-disable-next-line no-console, semi -- 禁用下一行的某些规则 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint-enable -- 启用该行以下的所有代码 */</span></span></code></pre></div><ol start="2"><li>或者通过 <code>.eslintrc.*</code> 中的 <code>overrides</code> 来重写，将对应的规则置为 <code>off</code>。</li></ol>`,23)]))}const u=i(l,[["render",t]]);export{k as __pageData,u as default};
