import{_ as a,c as o,o as c,b0 as d}from"./chunks/framework.CEggy_nf.js";const u=JSON.parse('{"title":"12.keep-alive","description":"","frontmatter":{"title":"12.keep-alive"},"headers":[],"relativePath":"frame/vue2/base/12.keep-alive.md","filePath":"frame/vue2/base/12.keep-alive.md","lastUpdated":1746186030000}'),t={name:"frame/vue2/base/12.keep-alive.md"};function i(l,e,p,r,s,_){return c(),o("div",null,e[0]||(e[0]=[d('<p><code>keep-alive</code> 是 <code>Vue</code> 的内置组件，用于缓存组件，避免重复渲染。</p><h2 id="_12-1-props" tabindex="-1">12-1.Props <a class="header-anchor" href="#_12-1-props" aria-label="Permalink to &quot;12-1.Props&quot;">​</a></h2><p><code>keep-alive</code> 接收的 <code>props</code> 如下：</p><ul><li><code>include</code>：字符串或正则表达式。只有名称匹配的组件会被缓存。</li><li><code>exclude</code>：字符串或正则表达式。名称匹配的组件不会被缓存。</li><li><code>max</code>：数字。最多可以缓存多少组件实例。</li></ul><h2 id="_12-2-lifecycle" tabindex="-1">12-2.Lifecycle <a class="header-anchor" href="#_12-2-lifecycle" aria-label="Permalink to &quot;12-2.Lifecycle&quot;">​</a></h2><p><code>keep-alive</code> 包裹的组件，会多出两个生命周期钩子函数：<code>activated</code> 和 <code>deactivated</code>。</p><p><code>activated</code> 函数在组件被激活时调用。</p><p><code>deactivated</code> 函数在组件被停用时调用。</p><p>另外，<code>created</code>、<code>mounted</code>、<code>destroyed</code> 等生命周期钩子函数只会执行一次。</p>',9)]))}const v=a(t,[["render",i]]);export{u as __pageData,v as default};
