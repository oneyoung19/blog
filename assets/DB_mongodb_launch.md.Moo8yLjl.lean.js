import{_ as s,o as d,c as e,aP as a}from"./chunks/framework.D1yHhm2y.js";const k=JSON.parse('{"title":"启动","description":"","frontmatter":{"title":"启动"},"headers":[],"relativePath":"DB/mongodb/launch.md","filePath":"DB/mongodb/launch.md","lastUpdated":1735989283000}'),i={name:"DB/mongodb/launch.md"};function o(n,t,c,l,h,p){return d(),e("div",null,t[0]||(t[0]=[a(`<h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>在 <code>macos</code> 上安装 <code>MongoDB</code> 后，会在 <code>/usr/local/etc/mongod.conf</code> 中生成配置文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mongod.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemLog:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  destination:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/var/log/mongodb/mongo.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  logAppend:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">storage:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dbPath:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/var/mongodb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">net:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bindIp:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  port:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 27017</span></span></code></pre></div><p>从该文件中可以看出，<code>MongoDB</code> 的配置文件主要包含三个部分：</p><ul><li><code>systemLog</code>：日志配置</li><li><code>storage</code>：存储配置</li><li><code>net</code>：网络配置</li></ul><h2 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务&quot;">​</a></h2><p>在 <code>macos</code> 上启动 <code>MongoDB</code> 服务的命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mongod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/etc/mongod.conf</span></span></code></pre></div><p>该命令启动之后，按 <code>ctrl + c</code> 可以停止服务。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>该命令，同 <code>redis-server</code> 命令类似，启动的并不是守护进程。</p><p>笔者在使用 <code>brew services start mongodb-community</code> 启动守护进程时，发现失败了。更加合适的方式，留待日后考究。</p><p>此处作以记录。</p></div><p>此处，再列举一下 <code>mongod</code> 的常用启动参数（<strong>更多参数，可通过 <code>mongod --help</code> 查看</strong>）：</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>--config</code></td><td>指明配置文件，譬如 <code>/usr/local/etc/mongod.conf</code>。</td></tr><tr><td><code>--bind_ip</code></td><td><code>IP</code> 地址，若绑定 <code>127.0.0.1</code>，则只能本机访问，不指定默认本地所有 <code>IP</code>。</td></tr><tr><td><code>--port</code></td><td>端口，默认为 <code>27017</code>。</td></tr><tr><td><code>--dbpath</code></td><td>指定数据库路径。</td></tr><tr><td><code>--logpath</code></td><td>指定日志文件，注意是指定文件不是目录。</td></tr><tr><td><code>--logappend</code></td><td>使用追加的方式写日志。</td></tr><tr><td><code>--serviceName</code></td><td>指定服务名称。</td></tr><tr><td><code>--serviceDisplayName</code></td><td>指定服务名称，有多个 <code>mongodb</code> 服务时执行。</td></tr><tr><td><code>--install</code></td><td>指定作为一个 <code>Windows</code> 服务安装。</td></tr></tbody></table><h2 id="连接数据库" tabindex="-1">连接数据库 <a class="header-anchor" href="#连接数据库" aria-label="Permalink to &quot;连接数据库&quot;">​</a></h2><p>在 <code>macos</code> 上连接 <code>MongoDB</code> 数据库的命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mongo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options] [db address] [file names (ending in .js)]</span></span></code></pre></div><p><img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/Not-Count-Contribution/img/20230408185904.png" alt=""></p><p>其中，<code>[options]</code> 为可选参数，<code>[db address]</code> 为数据库地址，<code>[file names (ending in .js)]</code> 为 <code>js</code> 文件。</p><p><code>[options]</code> 参数如下：</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-h</code></td><td>指定 <code>host</code>，默认为 <code>localhost</code>。</td></tr><tr><td><code>-p</code></td><td>指定端口，譬如 <code>27017</code>。</td></tr><tr><td><code>-u</code></td><td>指定用户名。</td></tr><tr><td><code>-p</code></td><td>指定密码。</td></tr><tr><td><code>-d</code></td><td>指定数据库。</td></tr></tbody></table><p><code>[db address]</code> 参数如下：</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>--host</code></td><td>指定 <code>host</code>，默认为 <code>localhost</code>。</td></tr><tr><td><code>--port</code></td><td>指定端口，譬如 <code>27017</code>。</td></tr><tr><td><code>--username</code></td><td>指定用户名。</td></tr><tr><td><code>--password</code></td><td>指定密码。</td></tr><tr><td><code>--authenticationDatabase</code></td><td>指定数据库。</td></tr></tbody></table><p><code>[file names (ending in .js)]</code> 参数如下：</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>--eval</code></td><td>执行 <code>js</code> 代码。</td></tr><tr><td><code>--shell</code></td><td>进入 <code>shell</code> 模式。</td></tr></tbody></table><h2 id="设置用户和密码" tabindex="-1">设置用户和密码 <a class="header-anchor" href="#设置用户和密码" aria-label="Permalink to &quot;设置用户和密码&quot;">​</a></h2><p>在终端中运行 <code>mongo</code> 命令，进入 <code>MongoDB</code> 的 <code>shell</code> 模式。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mongo</span></span></code></pre></div><p>运行如下命令，使用内置的 <code>admin</code> 数据库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin</span></span></code></pre></div><p>创建一个管理员用户，运行如下命令：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({user:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pwd:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, roles:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]})</span></span></code></pre></div><p>使用这个管理员用户账号登录，运行如下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mongo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --authenticationDatabase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin</span></span></code></pre></div><h2 id="全局变量" tabindex="-1">全局变量 <a class="header-anchor" href="#全局变量" aria-label="Permalink to &quot;全局变量&quot;">​</a></h2><p>在 <code>MongoDB</code> 的 <code>shell</code> 模式中，有一些全局变量，可以使用。</p><table tabindex="0"><thead><tr><th>变量名</th><th>描述</th></tr></thead><tbody><tr><td><code>db</code></td><td>当前数据库。</td></tr><tr><td><code>rs</code></td><td>副本集。</td></tr><tr><td><code>sh</code></td><td>分片。</td></tr><tr><td><code>db.getMongo()</code></td><td>当前 <code>MongoDB</code> 实例。</td></tr><tr><td><code>db.getMongo().setSlaveOk()</code></td><td>设置 <code>MongoDB</code> 实例为 <code>slave</code>。</td></tr><tr><td><code>db.getMongo().setReadPref()</code></td><td>设置 <code>MongoDB</code> 实例的 <code>read</code> 偏好。</td></tr></tbody></table>`,35)]))}const g=s(i,[["render",o]]);export{k as __pageData,g as default};
