import{_ as i,c as a,o as e,b0 as n}from"./chunks/framework.CEggy_nf.js";const c=JSON.parse('{"title":"2.表操作","description":"","frontmatter":{"title":"2.表操作"},"headers":[],"relativePath":"DB/sql/2.table.md","filePath":"DB/sql/2.table.md","lastUpdated":1745063360000}'),l={name:"DB/sql/2.table.md"};function t(p,s,h,k,d,E){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="显示所有表" tabindex="-1">显示所有表 <a class="header-anchor" href="#显示所有表" aria-label="Permalink to &quot;显示所有表&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show tables;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW TABLES;</span></span></code></pre></div><h2 id="创建表" tabindex="-1">创建表 <a class="header-anchor" href="#创建表" aria-label="Permalink to &quot;创建表&quot;">​</a></h2><p><strong>创建表，使用 <code>CREATE TABLE</code> 语法</strong>。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  column_name_1 data_type column_constraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> default_value,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  column_name_2 data_type column_constraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> default_value,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  table_constraint</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong><code>DEFAULT default_value</code></strong> 是指在表格中创建一列时，可以为该列指定一个默认值。如果在插入数据时未指定该列的值，则会自动使用该默认值。</p><p>例如，如果创建一个名为 <code>employees</code> 的表格，其中包含一个名为 <code>salary</code> 的列，可以为该列设置默认值为 <code>50000</code>，如下所示：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> employees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DECIMAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hire_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在上面的例子中，如果插入一行数据时未指定 <code>salary</code> 列的值，系统将会自动为其赋值为 <code>50000</code>。但是，如果插入一行数据时显式指定了 <code>salary</code> 的值，则系统将使用该值，而不是默认值。</p><p><strong><code>DEFAULT default_value</code></strong> 可以省略。如果在创建表格时不为某一列指定默认值，则该列将不会有默认值，这意味着在插入数据时必须为该列显式指定值或提供 <code>NULL</code> 值。</p><p>例如，下面的示例创建一个名为 <code>employees</code> 的表格，其中 <code>salary</code> 列没有指定默认值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> employees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DECIMAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hire_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在这种情况下，如果在插入数据时不为 <code>salary</code> 列指定值，则该列的值将为 <code>NULL</code>。如果在插入数据时为 <code>salary</code> 列指定了值，则将使用该值，而不是默认值。</p><p><strong><code>table_constraint</code></strong> 是在创建表格时，用于定义表格级别约束的语法元素。表格约束用于保证表格数据的完整性和一致性，例如限制某些列的取值范围、要求某些列不重复、定义外键关系等。</p><p>在创建表格时，可以为表格指定以下类型的约束：</p><p><code>PRIMARY KEY</code>：定义表格的主键。 <code>UNIQUE</code>：定义一个或多个列的唯一性约束，要求列中的每个值都是唯一的。 <code>CHECK</code>：定义一个或多个列的取值范围约束，要求列中的值必须符合指定的条件。 <code>FOREIGN KEY</code>：定义外键约束，用于保证关联表格中的数据完整性。</p><p>以下是一个包含多种约束的表格创建语句示例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  order_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  customer_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  order_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DECIMAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fk_customer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (customer_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customers(customer_id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> check_amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unique_order_date_customer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UNIQUE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (order_date, customer_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在上面的示例中，<code>orders</code> 表格定义了主键约束、外键约束、<code>CHECK</code> 约束和唯一性约束。</p><p>其中 <code>fk_customer</code> 是外键约束的名称，<code>check_amount</code> 是 <code>CHECK</code> 约束的名称，<code>unique_order_date_customer</code> 是唯一性约束的名称。</p><h2 id="修改表" tabindex="-1">修改表 <a class="header-anchor" href="#修改表" aria-label="Permalink to &quot;修改表&quot;">​</a></h2><p><strong>修改表，使用 <code>ALTER TABLE</code> 语法</strong>。</p><p>修改表，其实是修改表的列。因此，主要有以下三方面：</p><ol><li>添加列 <code>ADD</code></li><li>修改列 <code>MODIFY</code></li><li>删除列 <code>DROP</code></li></ol><h3 id="添加列" tabindex="-1">添加列 <a class="header-anchor" href="#添加列" aria-label="Permalink to &quot;添加列&quot;">​</a></h3><p>添加列，使用 <code>ADD</code> 语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_colum data_type column_constraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> default_value [AFTER existing_column];</span></span></code></pre></div><p><code>AFTER</code> 表示在哪一列后面添加新列，如果省略的话，会默认添加在最后一列后。</p><h3 id="修改列" tabindex="-1">修改列 <a class="header-anchor" href="#修改列" aria-label="Permalink to &quot;修改列&quot;">​</a></h3><p>修改列，使用 <code>MODIFY</code> 语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_name column_definition;</span></span></code></pre></div><p>譬如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> courses </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMERIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span></span></code></pre></div><h3 id="删除列" tabindex="-1">删除列 <a class="header-anchor" href="#删除列" aria-label="Permalink to &quot;删除列&quot;">​</a></h3><p>删除列，使用 <code>DROP COLUMN</code> 语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN column_name,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN colum_name,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...;</span></span></code></pre></div><h2 id="删除表" tabindex="-1">删除表 <a class="header-anchor" href="#删除表" aria-label="Permalink to &quot;删除表&quot;">​</a></h2><p><strong>删除表，使用 <code>DROP TABLE</code> 语法</strong>。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span></code></pre></div><p>另外有一些联用选项：</p><ul><li><code>IF EXISTS</code>：如果删除一个不存在的表，数据库系统将不会抛出任何错误。</li><li><code>CASCADE</code>：删除表的同时也删除与该表相关联的其他对象，例如触发器、索引、外键约束等。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 如果存在表employees，则删除该表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 删除表departments和与之关联的触发器和索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> departments CASCADE;</span></span></code></pre></div><p><code>DROP TABLE</code> 语句永久删除表的数据和结构，某些数据库系统要求表中的记录必须为空时才能从数据库中删除。这有助于防止意外删除仍在使用的表。</p><p><strong>要删除表中的所有数据</strong>，（也就是说保留表的定义但删除表中的所有数据）可以使用 <code>DELETE</code> 或 <code>TRUNCATE TABLE</code> 语句。</p><p><strong>要删除由另一个表的外键约束引用的表，必须在删除表之前禁用或删除外部约束</strong>。</p><p>也可以同时删除多个表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name, table_name, ...;</span></span></code></pre></div><h2 id="删除表中的数据" tabindex="-1">删除表中的数据 <a class="header-anchor" href="#删除表中的数据" aria-label="Permalink to &quot;删除表中的数据&quot;">​</a></h2><p>删除表，可以使用 <code>DROP TABLE</code>。</p><p>删除表中的数据，可以使用 <code>DELETE</code> 语句，或者 <code>TRUNCATE TABLE</code> 语句。</p><h3 id="delete" tabindex="-1">DELETE <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;DELETE&quot;">​</a></h3><p>删除表中的所有数据：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span></code></pre></div><p>删除表中的某些数据：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conditions;</span></span></code></pre></div><h3 id="truncate-table" tabindex="-1">TRUNCATE TABLE <a class="header-anchor" href="#truncate-table" aria-label="Permalink to &quot;TRUNCATE TABLE&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TRUNCATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span></code></pre></div><p><code>TRUNCATE TABLE</code> 用于从数据库表中删除所有数据行，并释放表所占用的存储空间。</p><p>它类似于 <code>DELETE</code> 命令，但有一些不同之处：</p><ol><li><p><code>TRUNCATE TABLE</code> 比 <code>DELETE</code> 更快，因为它不会逐行删除，而是直接删除整个表。</p></li><li><p><code>TRUNCATE TABLE</code> 不能带 <code>WHERE</code> 子句，因为它将删除表中的所有行。</p></li><li><p><code>TRUNCATE TABLE</code> 操作不能回滚，这意味着一旦你执行了 <code>TRUNCATE TABLE</code> 命令，数据就永久丢失了。因此，在执行 <code>TRUNCATE TABLE</code> 操作之前，请确保你真正需要删除所有行。</p></li></ol><h2 id="重命名表" tabindex="-1">重命名表 <a class="header-anchor" href="#重命名表" aria-label="Permalink to &quot;重命名表&quot;">​</a></h2><p>可以使用 <code>ALTER TABLE</code> 语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_table_name;</span></span></code></pre></div><p>也可以直接使用 <code>RENAME</code> 语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RENAME old_table _name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">To</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_table_name;</span></span></code></pre></div><h2 id="复制表" tabindex="-1">复制表 <a class="header-anchor" href="#复制表" aria-label="Permalink to &quot;复制表&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> destination_table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source_table</span></span></code></pre></div><h2 id="临时表" tabindex="-1">临时表 <a class="header-anchor" href="#临时表" aria-label="Permalink to &quot;临时表&quot;">​</a></h2><p><code>SQL</code> 临时表是在使用中创建的一种临时表格，只存在于当前的会话中，并在会话结束时自动销毁。</p><p>临时表通常被用来存储和处理一些临时性的数据，以便在 <code>SQL</code> 查询中使用。</p><p>临时表还有一些限制和特点：</p><ul><li>临时表只存在于当前会话中，对其他会话是不可见的。</li><li>临时表的数据只在当前会话中有效，当会话结束后，临时表的数据会自动清空。</li><li>临时表不能在事务中使用，因为它们的生命周期是和会话绑定的，而不是和事务绑定的。</li><li>临时表的命名规则和普通表一样，但是需要注意避免与其他会话中的临时表重名。</li></ul><p>临时表的语法与普通表非常相似，可以使用 <code>CREATE TABLE</code> 语句来创建临时表，例如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEMPORARY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp_table (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在使用完毕后，可以使用 <code>DROP TABLE</code> 语句来删除临时表，例如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEMPORARY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp_table;</span></span></code></pre></div><p><code>TEMPORARY</code> 和 <code>LOCAL TEMPORARY</code> 都是用于创建临时表的关键字，它们之间的区别在于临时表的可见性和作用域范围。</p><p><code>TEMPORARY</code> 关键字创建的临时表是全局可见的，它们可以被其他的会话或模块使用，但是它们只存在于创建它们的会话中。</p><p>如果在另一个会话中使用相同的表名创建了一个新的全局临时表，则原始的全局临时表将被覆盖。</p><p><code>LOCAL TEMPORARY</code> 关键字创建的临时表只能在当前会话中可见，其他的会话或模块无法使用它们。它们只存在于创建它们的会话中，并且在该会话结束时自动删除。如果在同一会话中使用相同的表名创建多个本地临时表，则每个本地临时表都是唯一的，并且它们之间不会相互干扰。</p><p>在大多数关系型数据库管理系统中，默认的临时表都是本地临时表。如果需要创建全局可见的临时表，则需要显式地指定 <code>TEMPORARY</code> 关键字。</p><p>但是，某些数据库管理系统可能不支持全局临时表，或者需要特定的许可证才能使用全局临时表。</p><p>因此，建议在使用临时表时，先查阅相关文档，了解目标数据库管理系统的支持情况。</p>`,83)]))}const r=i(l,[["render",t]]);export{c as __pageData,r as default};
