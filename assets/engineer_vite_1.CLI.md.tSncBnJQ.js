import{_ as d,c as e,o,b0 as c}from"./chunks/framework.CEggy_nf.js";const g=JSON.parse('{"title":"1.命令行","description":"","frontmatter":{"title":"1.命令行"},"headers":[],"relativePath":"engineer/vite/1.CLI.md","filePath":"engineer/vite/1.CLI.md","lastUpdated":1745141008000}'),r={name:"engineer/vite/1.CLI.md"};function i(a,t,s,l,n,h){return o(),e("div",null,t[0]||(t[0]=[c('<h2 id="_1-开发" tabindex="-1">1.开发 <a class="header-anchor" href="#_1-开发" aria-label="Permalink to &quot;1.开发&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [root]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>选项</th><th></th></tr></thead><tbody><tr><td><code>--host [host]</code></td><td>指定主机名称 (<code>string</code>)</td></tr><tr><td><code>--port [port]</code></td><td>指定端口 (<code>number</code>)</td></tr><tr><td><code>--open [path]</code></td><td>启动时打开浏览器 (`boolean</td></tr><tr><td><code>--cors</code></td><td>启用 CORS (<code>boolean</code>)</td></tr><tr><td><code>--strictPort</code></td><td>如果指定的端口已在使用中，则退出 (<code>boolean</code>)</td></tr><tr><td><code>--force</code></td><td>强制优化器忽略缓存并重新构建 (<code>boolean</code>)</td></tr><tr><td><code>-c, --config &lt;file&gt;</code></td><td>使用指定的配置文件 (<code>string</code>)</td></tr><tr><td><code>--base &lt;path&gt;</code></td><td>公共基础路径（默认为：<code>/</code>）(<code>string</code>)</td></tr><tr><td><code>-l, --logLevel &lt;level&gt;</code></td><td><code>info warn error slient (string)</code></td></tr><tr><td><code>--clearScreen</code></td><td>允许或禁用打印日志时清除屏幕 (<code>boolean</code>)</td></tr><tr><td><code>--profile</code></td><td>启动内置的 Node.js 调试器</td></tr><tr><td><code>-d, --debug [feat]</code></td><td>显示调试日志 (`string</td></tr><tr><td><code>-f, --filter &lt;filter&gt;</code></td><td>过滤调试日志 (<code>string</code>)</td></tr><tr><td><code>-m, --mode &lt;mode&gt;</code></td><td>设置环境模式 (<code>string</code>)</td></tr><tr><td><code>-h, --help</code></td><td>显示可用的 CLI 选项</td></tr><tr><td><code>-v, --version</code></td><td>显示版本号</td></tr></tbody></table><h2 id="_2-构建" tabindex="-1">2.构建 <a class="header-anchor" href="#_2-构建" aria-label="Permalink to &quot;2.构建&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [root]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>选项</th><th></th></tr></thead><tbody><tr><td><code>--target &lt;target&gt;</code></td><td>编译目标（默认为：<code>&quot;modules&quot;</code>）(<code>string</code>)</td></tr><tr><td><code>--outDir &lt;dir&gt;</code></td><td>输出目录（默认为：<code>dist</code>）(<code>string</code>)</td></tr><tr><td><code>--assetsDir &lt;dir&gt;</code></td><td>在输出目录下放置资源的目录（默认为：<code>&quot;assets&quot;</code>）(<code>string</code>)</td></tr><tr><td><code>--assetsInlineLimit &lt;number&gt;</code></td><td>静态资源内联为 base64 编码的阈值，以字节为单位（默认为：<code>4096</code>）(<code>number</code>)</td></tr><tr><td><code>--ssr [entry]</code></td><td>为服务端渲染配置指定入口文件 (<code>string</code>)</td></tr><tr><td><code>--sourcemap [output]</code></td><td>构建后输出 source map 文件（默认为：<code>false</code>）(`boolean</td></tr><tr><td><code>--minify [minifier]</code></td><td>允许或禁用最小化混淆，或指定使用哪种混淆器（默认为：<code>&quot;esbuild&quot;</code>）(`boolean</td></tr><tr><td><code>--manifest [name]</code></td><td>构建后生成 manifest.json 文件 (`boolean</td></tr><tr><td><code>--ssrManifest [name]</code></td><td>构建后生成 SSR manifest.json 文件 (`boolean</td></tr><tr><td><code>--force</code></td><td>强制优化器忽略缓存并重新构建（实验性）(<code>boolean</code>)</td></tr><tr><td><code>--emptyOutDir</code></td><td>若输出目录在根目录外，强制清空输出目录 (<code>boolean</code>)</td></tr><tr><td><code>-w, --watch</code></td><td>在磁盘中模块发生变化时，重新构建 (<code>boolean</code>)</td></tr><tr><td><code>-c, --config &lt;file&gt;</code></td><td>使用指定的配置文件 (<code>string</code>)</td></tr><tr><td><code>--base &lt;path&gt;</code></td><td>公共基础路径（默认为：<code>/</code>）(<code>string</code>)</td></tr><tr><td><code>-l, --logLevel &lt;level&gt;</code></td><td>Info | warn | error | silent (<code>string</code>)</td></tr><tr><td><code>--clearScreen</code></td><td>允许或禁用打印日志时清除屏幕 (<code>boolean</code>)</td></tr><tr><td><code>--profile</code></td><td>启动内置的 Node.js 调试器</td></tr><tr><td><code>-d, --debug [feat]</code></td><td>显示调试日志 (`string</td></tr><tr><td><code>-f, --filter &lt;filter&gt;</code></td><td>过滤调试日志 (<code>string</code>)</td></tr><tr><td><code>-m, --mode &lt;mode&gt;</code></td><td>设置环境模式 (<code>string</code>)</td></tr><tr><td><code>-h, --help</code></td><td>显示可用的 CLI 选项</td></tr></tbody></table><h2 id="_3-其他" tabindex="-1">3.其他 <a class="header-anchor" href="#_3-其他" aria-label="Permalink to &quot;3.其他&quot;">​</a></h2><h3 id="vite-optimize" tabindex="-1">vite optimize <a class="header-anchor" href="#vite-optimize" aria-label="Permalink to &quot;vite optimize&quot;">​</a></h3><p>预构建依赖。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [root]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>选项</th><th></th></tr></thead><tbody><tr><td><code>--force</code></td><td>强制优化器忽略缓存并重新构建 (<code>boolean</code>)</td></tr><tr><td><code>-c, --config &lt;file&gt;</code></td><td>使用指定的配置文件 (<code>string</code>)</td></tr><tr><td><code>--base &lt;path&gt;</code></td><td>公共基础路径（默认为：<code>/</code>）(<code>string</code>)</td></tr><tr><td><code>-l, --logLevel &lt;level&gt;</code></td><td>Info | warn | error |silent (<code>string</code>)</td></tr><tr><td><code>--clearScreen</code></td><td>允许或禁用打印日志时清除屏幕 (<code>boolean</code>)</td></tr><tr><td><code>-d, --debug [feat]</code></td><td>显示调试日志 (`string</td></tr><tr><td><code>-f, --filter &lt;filter&gt;</code></td><td>过滤调试日志 (<code>string</code>)</td></tr><tr><td><code>-m, --mode &lt;mode&gt;</code></td><td>设置环境模式 (<code>string</code>)</td></tr><tr><td><code>-h, --help</code></td><td>显示可用的 CLI 选项</td></tr></tbody></table><h3 id="vite-preview" tabindex="-1">vite preview <a class="header-anchor" href="#vite-preview" aria-label="Permalink to &quot;vite preview&quot;">​</a></h3><p>本地预览构建产物。不要将其用作生产服务器，因为它不是为此而设计的。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [root]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>选项</th><th></th></tr></thead><tbody><tr><td><code>--host [host]</code></td><td>指定主机名称 (<code>string</code>)</td></tr><tr><td><code>--port &lt;port&gt;</code></td><td>指定端口 (<code>number</code>)</td></tr><tr><td><code>--strictPort</code></td><td>如果指定的端口已在使用中，则退出 (<code>boolean</code>)</td></tr><tr><td><code>--open [path]</code></td><td>启动时打开浏览器 (`boolean</td></tr><tr><td><code>--outDir &lt;dir&gt;</code></td><td>输出目录（默认为：<code>dist</code>)(<code>string</code>)</td></tr><tr><td><code>-c, --config &lt;file&gt;</code></td><td>使用指定的配置文件 (<code>string</code>)</td></tr><tr><td><code>--base &lt;path&gt;</code></td><td>公共基础路径（默认为：<code>/</code>）(<code>string</code>)</td></tr><tr><td><code>-l, --logLevel &lt;level&gt;</code></td><td>Info | warn | error | silent (<code>string</code>)</td></tr><tr><td><code>--clearScreen</code></td><td>允许或禁用打印日志时清除屏幕 (<code>boolean</code>)</td></tr><tr><td><code>-d, --debug [feat]</code></td><td>显示调试日志 (`string</td></tr><tr><td><code>-f, --filter &lt;filter&gt;</code></td><td>过滤调试日志 (<code>string</code>)</td></tr><tr><td><code>-m, --mode &lt;mode&gt;</code></td><td>设置环境模式 (<code>string</code>)</td></tr><tr><td><code>-h, --help</code></td><td>显示可用的 CLI 选项</td></tr></tbody></table>',15)]))}const b=d(r,[["render",i]]);export{g as __pageData,b as default};
