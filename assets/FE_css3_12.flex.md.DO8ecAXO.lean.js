import{_ as o,o as a,c as l,aP as i}from"./chunks/framework.D1yHhm2y.js";const h=JSON.parse('{"title":"12.Flex","description":"","frontmatter":{"title":"12.Flex"},"headers":[],"relativePath":"FE/css3/12.flex.md","filePath":"FE/css3/12.flex.md","lastUpdated":1735964775000}'),c={name:"FE/css3/12.flex.md"};function t(d,e,s,n,r,p){return a(),l("div",null,e[0]||(e[0]=[i('<p><code>Flex</code> 布局又成为<strong>弹性盒子布局</strong>。</p><p>它有两条轴：<strong>主轴</strong> <code>main axis</code> 和<strong>交叉轴</strong> <code>cross axis</code>。</p><p><strong>一般情况下</strong>，主轴指的是水平方向的轴线，交叉轴指的是垂直方向的轴线（会受到 <code>flex-direction</code> 的影响）。</p><p>它的属性分为两类：</p><ol><li>容器属性。</li><li>项目属性。</li></ol><h2 id="_12-1-容器属性" tabindex="-1">12-1.容器属性 <a class="header-anchor" href="#_12-1-容器属性" aria-label="Permalink to &quot;12-1.容器属性&quot;">​</a></h2><p>该系列属性设置在容器上。</p><h3 id="_12-1-1-flex-direction" tabindex="-1">12-1-1.flex-direction <a class="header-anchor" href="#_12-1-1-flex-direction" aria-label="Permalink to &quot;12-1-1.flex-direction&quot;">​</a></h3><p><code>flex-direction</code> 设置主轴方向。</p><p>其可选值有以下：</p><ol><li><code>row</code> 默认值</li><li><code>row-reverse</code></li><li><code>column</code></li><li><code>column-reverse</code></li></ol><h3 id="_12-1-2-flex-wrap" tabindex="-1">12-1-2.flex-wrap <a class="header-anchor" href="#_12-1-2-flex-wrap" aria-label="Permalink to &quot;12-1-2.flex-wrap&quot;">​</a></h3><p><code>flex-wrap</code> 设置是否换行。</p><p>其可选值有以下：</p><ol><li><code>nowrap</code> 默认值</li><li><code>wrap</code></li><li><code>wrap-reverse</code></li></ol><h3 id="_12-1-3-flex-flow" tabindex="-1">12-1-3.flex-flow <a class="header-anchor" href="#_12-1-3-flex-flow" aria-label="Permalink to &quot;12-1-3.flex-flow&quot;">​</a></h3><p><code>flex-flow</code> 是 <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写属性。</p><p>其用法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>flex-flow: row-reverse wrap;</span></span></code></pre></div><h3 id="_12-1-4-justify-content" tabindex="-1">12-1-4.justify-content <a class="header-anchor" href="#_12-1-4-justify-content" aria-label="Permalink to &quot;12-1-4.justify-content&quot;">​</a></h3><p><code>justify-content</code> 设置<strong>主轴方向</strong>的排列方式。</p><p>其可选值有以下：</p><ol><li><code>center</code></li><li><code>flex-start</code> 默认值</li><li><code>flex-end</code></li><li><code>space-between</code></li><li><code>space-around</code></li><li><code>space-evenly</code></li></ol><h3 id="_12-1-5-align-items" tabindex="-1">12-1-5.align-items <a class="header-anchor" href="#_12-1-5-align-items" aria-label="Permalink to &quot;12-1-5.align-items&quot;">​</a></h3><p><code>align-items</code> 设置<strong>交叉轴方向</strong>的<strong>元素</strong>排列方式。</p><p>其可选值有以下：</p><ol><li><code>center</code></li><li><code>flex-start</code></li><li><code>flex-end</code></li></ol><h3 id="_12-1-6-align-content" tabindex="-1">12-1-6.align-content <a class="header-anchor" href="#_12-1-6-align-content" aria-label="Permalink to &quot;12-1-6.align-content&quot;">​</a></h3><p><code>align-content</code> 设置<strong>交叉轴方向</strong>的<strong>轴线</strong>排列方式。</p><p>其可选值有以下：</p><ol><li><code>stretch</code> 默认值</li><li><code>center</code></li><li><code>flex-start</code></li><li><code>flex-end</code></li><li><code>space-between</code></li><li><code>space-around</code></li><li><code>space-evenly</code></li></ol><blockquote><p>The align-content property modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines</p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当容器有固定高度，且触发了 <code>flex-wrap</code> 时，元素交叉轴方向的占用空间会被拉伸。</p><p>平时开发注意不到上述影响，是因为<strong>通常不会给外层容器设置固定高度</strong>。</p></div><h2 id="_12-2-项目属性" tabindex="-1">12-2.项目属性 <a class="header-anchor" href="#_12-2-项目属性" aria-label="Permalink to &quot;12-2.项目属性&quot;">​</a></h2><p>该系列属性用来设置项目。</p><h3 id="_12-2-1-order" tabindex="-1">12-2-1.order <a class="header-anchor" href="#_12-2-1-order" aria-label="Permalink to &quot;12-2-1.order&quot;">​</a></h3><p><code>order</code> 设置项目的排列顺序 数值越小，排列越靠前，默认为 <code>0</code>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>order: 1;</span></span></code></pre></div><h3 id="_12-2-2-flex-basis" tabindex="-1">12-2-2.flex-basis <a class="header-anchor" href="#_12-2-2-flex-basis" aria-label="Permalink to &quot;12-2-2.flex-basis&quot;">​</a></h3><p><code>flex-basis</code> 设置在分配多余空间之前，项目占据的主轴空间。浏览器会根据这个属性来计算主轴是否有多余空间。</p><p>它的默认值为 <code>auto</code>，即项目的本来大小。</p><h3 id="_12-2-3-flex-grow" tabindex="-1">12-2-3.flex-grow <a class="header-anchor" href="#_12-2-3-flex-grow" aria-label="Permalink to &quot;12-2-3.flex-grow&quot;">​</a></h3><p><code>flex-grow</code> 设置项目的放大比例，默认为 <code>0</code>，即如果存在剩余空间时也不放大。</p><h3 id="_12-2-4-flex-shrink" tabindex="-1">12-2-4.flex-shrink <a class="header-anchor" href="#_12-2-4-flex-shrink" aria-label="Permalink to &quot;12-2-4.flex-shrink&quot;">​</a></h3><p><code>flex-shrink</code> 设置项目的缩小比例，默认为 <code>1</code>，即如果空间不足，该项目将缩小。不能设置负值。</p><h3 id="_12-2-5-flex" tabindex="-1">12-2-5.flex <a class="header-anchor" href="#_12-2-5-flex" aria-label="Permalink to &quot;12-2-5.flex&quot;">​</a></h3><p><code>flex</code> 是 <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写，后两个属性可选。</p><p>默认值为：<code>flex:0 1 auto;</code></p><p>如果设置为 <code>flex: 1</code>; 则等于 <code>flex-grow: 1; flex-shrink: 1; flex-basis: 0%;</code>。</p><h3 id="_12-2-6-align-self" tabindex="-1">12-2-6.align-self <a class="header-anchor" href="#_12-2-6-align-self" aria-label="Permalink to &quot;12-2-6.align-self&quot;">​</a></h3><p><code>align-self</code> 用来设置某个项目的排列方式。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>align-self: auto | flex-start | flex-end | center | baseline | stretch;</span></span></code></pre></div><p><code>align-items</code> 针对的是所有项目，而 <code>align-self </code>则是针对某个项目，二者表现形式一致。</p><p>唯一区别就是 <code>align-self</code> 多了个 <code>auto</code>（默认值），表示继承自 <code>flex</code> 容器的 <code>align-items</code> 属性值。其他属性值含义一模一样。</p>',54)]))}const x=o(c,[["render",t]]);export{h as __pageData,x as default};
