import{_ as i,o as a,c as t,b0 as n}from"./chunks/framework.CkgpWotD.js";const c=JSON.parse('{"title":"文档操作","description":"","frontmatter":{"title":"文档操作"},"headers":[],"relativePath":"DB/mongodb/document.md","filePath":"DB/mongodb/document.md","lastUpdated":1737464486000}'),l={name:"DB/mongodb/document.md"};function e(p,s,h,d,k,E){return a(),t("div",null,s[0]||(s[0]=[n(`<p>本节主要介绍 <code>MongoDB</code> 的文档操作。</p><p><code>MongoDB</code> 中的数据存储在集合（<code>collection</code>）中，集合中的每条数据称为文档（<code>document</code>）。</p><p>其实 <strong><code>MongoDB</code> 的 <code>document</code> 相当于 <code>SQL</code> 中的 <code>row</code></strong>。</p><h2 id="查询文档" tabindex="-1">查询文档 <a class="header-anchor" href="#查询文档" aria-label="Permalink to &quot;查询文档&quot;">​</a></h2><p>查询文档常用的方法有：</p><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td><code>db.collection.find()</code></td><td>查询集合中的文档</td><td></td></tr><tr><td><code>db.collection.findOne()</code></td><td>查询集合中的单个文档</td><td></td></tr><tr><td><code>db.collection.findOneAnd*()</code></td><td>查询集合中的单个文档，并且可以对文档进行更新、删除等操作。</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.aggregate()</code></td><td>使用聚合管道对文档进行聚合操作。</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.count()</code></td><td>统计集合中的文档数量。</td><td></td></tr><tr><td><code>db.collection.distinct()</code></td><td>返回集合中指定字段的不同值。</td><td></td></tr><tr><td><code>db.collection.explain()</code></td><td>返回集合中文档的执行计划。</td><td></td></tr><tr><td><code>db.collection.findAndModify()</code></td><td>查询集合中的单个文档，并且可以对文档进行更新、删除等操作。</td><td></td></tr><tr><td><code>db.collection.findAndRemove()</code></td><td>查询集合中的单个文档，并且可以对文档进行删除操作。</td><td></td></tr><tr><td><code>db.collection.group()</code></td><td>对集合中的文档进行分组聚合操作。</td><td></td></tr><tr><td><code>db.collection.mapReduce()</code></td><td>使用 <code>map</code> 和 <code>reduce</code> 函数对集合中的文档进行聚合操作。</td><td></td></tr><tr><td><code>db.collection.parallelCollectionScan()</code></td><td>并行扫描集合中的文档。</td><td></td></tr></tbody></table><p>此处，我们以 <code>find()</code> 和 <code>findOne()</code> 为例进行说明。</p><p>其中 <strong><code>findOne()</code> 方法只会查找第一条匹配的文档并返回，返回是对象形式</strong>。</p><p>而 <strong><code>find()</code> 方法会返回一个 <code>cursor</code> 对象，通过 <code>cursor</code> 对象可以遍历集合中的所有文档</strong>。</p><p>这个 <code>cursor</code> 对象也可以看做 <code>JavaScript</code> 中的 <code>Iterator</code> 类数组对象，可以通过 <code>forEach()</code> 方法遍历。</p><p>可以在 <code>MongoDB Shell</code> 中执行以下命令进行测试：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.find();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">printjson(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[1]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(doc) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  printjson(doc);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="插入文档" tabindex="-1">插入文档 <a class="header-anchor" href="#插入文档" aria-label="Permalink to &quot;插入文档&quot;">​</a></h2><p>在 <code>MongoDB</code> 中，每一个文档都有一个 <code>_id</code> 字段，用于唯一标识一个文档。</p><p>如果插入时没有指定 <code>_id</code> 字段，<code>MongoDB</code> 会自动为文档添加一个 <code>_id</code> 字段。</p><p>插入文档常用的方法有：</p><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td><code>db.collection.insertOne()</code></td><td>将单个文档插入集合</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.insertMany()</code></td><td>将多个文档插入集合</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.insert()</code></td><td>将单个或多个文档插入集合</td><td></td></tr></tbody></table><p>譬如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.insertOne({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.insertMany([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;李四&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;李四&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h2 id="更新文档" tabindex="-1">更新文档 <a class="header-anchor" href="#更新文档" aria-label="Permalink to &quot;更新文档&quot;">​</a></h2><p>更新文档分为<strong>单个文档更新</strong>与<strong>聚合管道更新</strong>。</p><p>顾名思义，<strong>单个文档更新</strong>是指更新单个文档。</p><p>而<strong>聚合管道更新</strong>是指更新多个文档，并且可以使用聚合管道操作符对文档进行复杂的操作，例如 <code>$lookup</code>、<code>$addFields</code>、<code>$group</code> 等操作符。</p><p><strong>聚合管道更新</strong>通常用于对符合一定条件的多个文档进行批量更新，而不是像普通的文档更新那样一次只能更新一个文档。</p><p><strong>聚合管道更新</strong>可以通过一个或多个聚合管道操作，对多个文档进行批量更新，大大提高了更新效率。</p><h3 id="单个文档更新" tabindex="-1">单个文档更新 <a class="header-anchor" href="#单个文档更新" aria-label="Permalink to &quot;单个文档更新&quot;">​</a></h3><p>更新文档常用的方法有：</p><table tabindex="0"><thead><tr><th>方法</th><th>描述</th><th>版本</th></tr></thead><tbody><tr><td><code>db.collection.updateOne()</code></td><td>更新单个与指定的过滤器匹配文档。</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.updateMany()</code></td><td>更新所有与指定的过滤器匹配文档。</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.replaceOne()</code></td><td><strong>替换</strong>单个与指定的过滤器匹配文档。</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.update()</code></td><td>默认情况下，<code>db.collection.update()</code> 方法更新单个文档。 要更新多个文档，请使用 <code>multi</code> 选项。</td><td></td></tr></tbody></table><p>基本使用格式举例如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.updateOne(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;filter&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;update&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.replaceOne(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;filter&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">replacement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>其中的参数含义如下：</p><ol><li><code>&lt;filter&gt;</code> 查询条件</li><li><code>&lt;update&gt;</code> 更新操作，使用更新运算符</li><li><code>&lt;replacement&gt;</code> 替换文档，完整的新文档记录</li><li><code>&lt;options&gt;</code> 可选参数，如排序、限制等参数</li></ol><p>譬如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.updateOne(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { $</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>单个文档更新，也可以同时使用多个更新操作符，例如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.updateOne(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $currentDate: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lastModified&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: true }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="聚合管道更新" tabindex="-1">聚合管道更新 <a class="header-anchor" href="#聚合管道更新" aria-label="Permalink to &quot;聚合管道更新&quot;">​</a></h3><p>聚合管道更新使用的是聚合管道操作符，而不是更新运算符。</p><p>而且聚合管道更新只能使用 <code>updateMany()</code> 方法，且是<strong>数组形式</strong>。</p><p>另外，聚合管道更新的执行效率要比单个文档更新高很多。</p><p>假设有一个集合存储每个用户的订单信息，包括订单号、用户 <code>ID</code>、商品名称和价格，并且我们想对每个用户的订单进行汇总，并将结算后的销售总额保存在用户文档中，可以使用聚合管道更新如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.updateMany(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $group: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$userId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        total: { $sum: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $lookup: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        localField: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        foreignField: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $unwind: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$user&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $addFields: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;user.total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$total&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $replaceRoot: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        newRoot: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$user&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>此代码的执行流程如下：</p><ol><li>使用 <code>$group</code> 操作符对每个用户的订单进行汇总，得到每个用户的销售总额</li><li>使用 <code>$lookup</code> 操作符将用户文档与订单文档进行关联，得到每个用户的销售总额</li><li>使用 <code>$unwind</code> 操作符将关联后的文档展开，得到每个用户的销售总额</li><li>使用 <code>$addFields</code> 操作符将每个用户的销售总额添加到用户文档中</li><li>使用 <code>$replaceRoot</code> 操作符将用户文档替换为聚合管道的根文档</li><li>使用 <code>updateMany</code> 方法将聚合管道的根文档更新到用户文档中</li><li><code>updateMany</code> 方法会将聚合管道的根文档作为过滤器，将聚合管道的根文档更新为聚合管道的最后一个文档</li></ol><h2 id="删除文档" tabindex="-1">删除文档 <a class="header-anchor" href="#删除文档" aria-label="Permalink to &quot;删除文档&quot;">​</a></h2><p>删除文档常用的方法有：</p><table tabindex="0"><thead><tr><th>方法</th><th>描述</th><th>版本</th></tr></thead><tbody><tr><td><code>db.collection.deleteOne()</code></td><td>删除单个与指定过滤器匹配的文档</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.deleteMany()</code></td><td>删除所有与指定过滤器匹配的文档</td><td><code>3.2+</code></td></tr><tr><td><code>db.collection.remove()</code></td><td>删除单个文档或与指定过滤器匹配的所有文档</td><td></td></tr></tbody></table><p>如果想要删除所有文档，可以使用：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.deleteMany({});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 或者</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({});</span></span></code></pre></div><p>这里的空对象 <code>{}</code> 代表不过滤指定条件的文档，也就是会指代所有文档。</p>`,52)]))}const r=i(l,[["render",e]]);export{c as __pageData,r as default};
