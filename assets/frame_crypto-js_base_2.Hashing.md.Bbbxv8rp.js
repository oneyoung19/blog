import{_ as i,c as a,o as n,b0 as l}from"./chunks/framework.D8aj9ziZ.js";const r=JSON.parse('{"title":"2.Hashing","description":"","frontmatter":{"title":"2.Hashing"},"headers":[],"relativePath":"frame/crypto-js/base/2.Hashing.md","filePath":"frame/crypto-js/base/2.Hashing.md","lastUpdated":1750219148000}'),e={name:"frame/crypto-js/base/2.Hashing.md"};function p(h,s,t,k,d,c){return n(),a("div",null,s[0]||(s[0]=[l(`<p><em><strong>哈希算法（<code>Hashing Algorithm</code>）是一种将任意长度的输入数据转换为固定长度的输出数据（哈希值或散列值）的算法</strong></em>。</p><p>哈希算法广泛应用于计算机科学和信息安全领域，用于数据完整性验证、密码存储、数字签名、数据结构等多个方面。</p><p>以下是一些常见的哈希算法：</p><ol><li><p><code>MD5</code>（<code>Message Digest 5</code>）：<code>MD5</code> 是一种广泛使用的哈希算法，生成 <code>128</code> 位（<code>16</code> 字节）的哈希值。然而，由于其容易受到碰撞攻击的影响，不再建议用于安全敏感的应用。</p></li><li><p><code>SHA-1</code>（<code>Secure Hash Algorithm 1</code>）：<code>SHA-1</code> 生成 <code>160</code> 位（<code>20</code> 字节）的哈希值。与 <code>MD5</code> 一样，<code>SHA-1</code> 也已被认为不安全，因为它也容易受到碰撞攻击的威胁。</p></li><li><p><code>SHA-256</code>（<code>Secure Hash Algorithm 256位</code>）：<code>SHA-256</code> 是 <code>SHA-2</code> 家族中的一员，生成 <code>256</code> 位（<code>32</code>字节）的哈希值。<strong>它目前被广泛使用，提供了较高的安全性</strong>。</p></li><li><p><code>SHA-3</code>（<code>Secure Hash Algorithm 3</code>）：<code>SHA-3</code> 是新一代的哈希算法，提供了与 <code>SHA-2</code> 不同的设计，也具备较高的安全性。它有多个变体，如<code>SHA3-256</code>、<code>SHA3-512</code> 等。</p></li><li><p><code>RIPEMD</code>（<code>RACE Integrity Primitives Evaluation Message Digest</code>）：<code>RIPEMD</code> 家族包括 <code>RIPEMD-160</code>、<code>RIPEMD-256</code>等变体，用于生成不同长度的哈希值。<code>RIPEMD-160</code> 曾经用于比特币地址生成。</p></li><li><p><code>bcrypt</code>：<code>bcrypt</code> 是一种基于 <code>Blowfish</code> 加密算法的哈希算法，通常用于密码存储。它具有自适应性，可以通过增加计算成本来提高安全性。</p></li><li><p><code>scrypt</code>：<code>scrypt</code> 是一种哈希函数，专门设计用于抵抗硬件攻击。它通常用于密码学安全领域，特别是密码存储。</p></li><li><p><code>Whirlpool</code>：<code>Whirlpool</code> 是一种新兴的哈希算法，生成 <code>512</code> 位的哈希值。它在一些安全领域中被使用，但没有像 <code>SHA-2</code> 那样广泛流行。</p></li><li><p><code>Blake2</code>：<code>Blake2</code> 是一种高性能哈希函数，用于替代 <code>MD5</code> 和 <code>SHA-2</code> 等不安全的哈希算法。它在许多应用中广受欢迎，包括密码管理和加密货币。</p></li></ol><p>而在 <code>crypto-js</code> 中支持的哈希算法有以下几种：</p><h2 id="_2-1-md5" tabindex="-1">2-1.MD5 <a class="header-anchor" href="#_2-1-md5" aria-label="Permalink to &quot;2-1.MD5&quot;">​</a></h2><p><code>MD5</code> 全称是<code>Message Digest 5</code>，即<strong>信息摘要算法</strong>，是一种广泛使用的哈希函数。</p><p>它能够生成 <code>128</code> 位（<code>16</code> 字节）固定长度的哈希值。</p><p>它已被用于各种安全应用程序，并且<strong>通常用于检查文件的完整性</strong>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MD5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/md5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   words: [ -1324708431, 1692431681, 95922587, -416399387 ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   sigBytes: 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// b10a8db164e0754105b7a99be72e3fe5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><h2 id="_2-2-sha-1" tabindex="-1">2-2.SHA-1 <a class="header-anchor" href="#_2-2-sha-1" aria-label="Permalink to &quot;2-2.SHA-1&quot;">​</a></h2><p><code>SHA-1</code> 全称是 <code>Secure Hash Algorithm 1</code>，即 <code>安全哈希算法v1版本</code>。</p><p>它能够生成 <code>160</code> 位（<code>20</code> 字节）固定长度的哈希值。</p><p><strong>它与 <code>MD5</code> 在安全方面，同样存在碰撞攻击的风险，因此在业务开发中，推荐使用更高版本的 <code>SHA</code>。</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SHA1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/sha1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   words: [ 172840360, -679942910, 799764505, 2009454656, -1144748336 ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   sigBytes: 20</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0a4d55a8d778e5022fab701977c5d840bbc486d0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><h2 id="_2-3-sha-2" tabindex="-1">2-3.SHA-2 <a class="header-anchor" href="#_2-3-sha-2" aria-label="Permalink to &quot;2-3.SHA-2&quot;">​</a></h2><p><code>SHA-2</code> 全称是 <code>Secure Hash Algorithm 2</code>，它是 <code>SHA</code> 算法的 <code>v2</code> 版本。</p><p>相比 <code>v1</code>，它更加安全。</p><p>该版本中，大致存在 <code>4</code> 个变体，但<strong>它们之间的区别只是计算结果的字段长度不同</strong>。譬如：</p><ol><li><code>SHA-224</code></li><li><code>SHA-256</code></li><li><code>SHA-384</code></li><li><code>SHA-512</code></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SHA224</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/sha224&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   words: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -997650513,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -38793123,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -1726331362,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     1720592230,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -2059396350,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -357437629,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     1920553031,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     1985917493</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   sigBytes: 28</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA224</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// c4890faffdb0105d991a461e668e276685401b02eab1ef4372795047</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA224</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SHA256</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/sha256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   words: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -1517181228,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     200548416,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     1241585459,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -810045040,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -701733441,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     198026027,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     1471313881,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     -1382083474</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   sigBytes: 32</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><h2 id="_2-4-sha-3" tabindex="-1">2-4.SHA-3 <a class="header-anchor" href="#_2-4-sha-3" aria-label="Permalink to &quot;2-4.SHA-3&quot;">​</a></h2><p><code>SHA-3</code>，顾名思义是 <code>Secure Hash Algorithm 3</code>，它是 <code>SHA</code> 算法的 <code>v3</code> 版本。</p><p>相比 <code>SHA-2</code>，它采用了更新的加密算法和逻辑。但<strong>在安全性方面，<code>SHA-2</code> 和 <code>SHA-3</code> 都是值得信任的</strong>。</p><p><code>crypto-js</code> 的 <code>SHA-3</code> 也存在于 <code>SHA-2</code> 相同的 <code>4</code> 个变体，但与 <code>SHA2</code> 的使用方式不同：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SHA3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/sha3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cdb63525237c078fe2292b7a81e5eb1b6a9758a837372b0d974863b3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, { outputLength: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">224</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, { outputLength: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// fd7eefc50b9b462c5b3b18a79a97785a0e61513cc8c0fcbcf4c15f2c97f5414183aa97a3de68cd8db96adb9aaa0f0b0a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, { outputLength: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">384</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3c52dbaa2d9902c35bcf80169c17e5ab4edfb28b78be5b2257697db95ee58f336c426db12a9c19a1bb61a89b7e534fca88555eebe811b01ed828c0d5a4687b3e</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, { outputLength: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><h2 id="_2-5-ripemd160" tabindex="-1">2-5.RIPEMD160 <a class="header-anchor" href="#_2-5-ripemd160" aria-label="Permalink to &quot;2-5.RIPEMD160&quot;">​</a></h2><p><code>RIPEMD</code> 全称是 <code>RACE Integrity Primitives Evaluation Message Digest</code>。即<strong>RACE完整性基元评估消息摘要</strong></p><p><code>RIPEMD</code> 家族包括 <code>RIPEMD-160</code>、<code>RIPEMD-256</code>等变体，用于生成不同长度的哈希值。</p><p><code>crypto-js</code> 中只提供了 <code>RIPEMD160</code> 算法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RIPEMD160</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js/ripemd160&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a830d7beb04eb7549ce990fb7dc962e499a27230</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RIPEMD160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>RIPEMD-160</code> 在许多密码学和加密应用中使用，特别是在数字签名和加密货币领域。譬如<strong>比特币</strong>。</p><p>它的输出长度相对较短，适合于创建短哈希值，但在一定程度上也提供了足够的安全性。</p></div>`,33)]))}const g=i(e,[["render",p]]);export{r as __pageData,g as default};
