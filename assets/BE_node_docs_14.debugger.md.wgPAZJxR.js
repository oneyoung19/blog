import{_ as i,c as a,o as e,b0 as n}from"./chunks/framework.CEggy_nf.js";const c=JSON.parse('{"title":"14.debugger","description":"","frontmatter":{"title":"14.debugger"},"headers":[],"relativePath":"BE/node/docs/14.debugger.md","filePath":"BE/node/docs/14.debugger.md","lastUpdated":1745067306000}'),l={name:"BE/node/docs/14.debugger.md"};function t(p,s,d,h,k,o){return e(),a("div",null,s[0]||(s[0]=[n(`<p><code>node inspect ./scripts.js</code></p><p>调试器会自动在第一个可执行行处中断。要改为运行直到第一个断点（由 <code>debugger</code> 语句指定），请将 <code>NODE_INSPECT_RESUME_ON_START</code> 环境变量设置为 <code>1</code> 。</p><p><code>NODE_INSPECT_RESUME_ON_START=1 node inspect myscript.js</code></p><ul><li><code>repl</code> 命令允许远程评估代码。</li><li><code>next</code> 命令进入下一行</li><li>按 <code>enter</code> 而不键入命令将重复先前的调试器命令。</li><li>输入 <code>help</code> 查看其他可用命令。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">global.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  debugger</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,5)]))}const r=i(l,[["render",t]]);export{c as __pageData,r as default};
