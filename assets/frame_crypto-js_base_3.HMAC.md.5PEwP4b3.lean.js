import{_ as i,o as a,c as n,aP as h}from"./chunks/framework.D1yHhm2y.js";const o=JSON.parse('{"title":"3.HMAC","description":"","frontmatter":{"title":"3.HMAC"},"headers":[],"relativePath":"frame/crypto-js/base/3.HMAC.md","filePath":"frame/crypto-js/base/3.HMAC.md","lastUpdated":1735989283000}'),t={name:"frame/crypto-js/base/3.HMAC.md"};function e(p,s,l,k,d,c){return a(),n("div",null,s[0]||(s[0]=[h(`<p><code>HMAC</code> 的全称是 <code>Hash-based Message Authentication Code</code>，即<strong>基于哈希的信息验证算法</strong>。</p><p><code>HMAC</code> 使用散列函数（如 <code>MD5</code>、<code>SHA-256</code>等）和一个密钥来生成认证码。</p><p>发送方和接收方都知道共享的密钥，发送方使用密钥和消息一起计算认证码，然后将认证码发送给接收方。</p><p>接收方使用相同的密钥和接收到的消息计算认证码，然后比较计算得到的认证码与接收到的认证码是否匹配。</p><p>如果匹配，消息被认为是可信的和完整的；如果不匹配，消息可能已被篡改或来自未经授权的发送方。</p><p>它通常用于保护数据的完整性和防止数据篡改。</p><p><strong><code>HMAC</code> 结合了散列函数（通常是 <code>SHA-256</code>、<code>SHA-512</code> 等）和一个密钥，通过在消息上执行哈希运算来生成一个固定长度的认证码</strong>。</p><p>由于 <code>HMAC</code> 是基于 <code>Hash</code>，因此在 <code>crypto-js</code> 中提供了类似于上节中 <code>Hash</code> 方法的 <code>API</code>：</p><ol><li><code>HmacMD5</code></li><li><code>HmacSHA1</code></li><li><code>HmacSHA224</code></li><li><code>HmacSHA256</code></li><li><code>HmacSHA384</code></li><li><code>HmacSHA512</code></li><li><code>HmacRIPEMD160</code></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> md5Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CryptoJS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HmacMD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Secret Passphrase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sha1Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CryptoJS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HmacSHA1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Secret Passphrase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sha256Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CryptoJS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HmacSHA256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Secret Passphrase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sha512Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CryptoJS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HmacSHA512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Secret Passphrase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>以 <code>HmacMD5</code> 为例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CryptoJs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;crypto-js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello World&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 880c4dcdc4ce1f8696b9645c44b275c6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoJs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HmacMD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div>`,12)]))}const E=i(t,[["render",e]]);export{o as __pageData,E as default};
