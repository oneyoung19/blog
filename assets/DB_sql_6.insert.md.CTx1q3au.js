import{_ as a,c as i,o as e,b0 as l}from"./chunks/framework.CYy1HSjD.js";const r=JSON.parse('{"title":"6.INSERT","description":"","frontmatter":{"title":"6.INSERT"},"headers":[],"relativePath":"DB/sql/6.insert.md","filePath":"DB/sql/6.insert.md","lastUpdated":1750664209000}'),n={name:"DB/sql/6.insert.md"};function t(p,s,d,o,h,c){return e(),i("div",null,s[0]||(s[0]=[l(`<p><code>SQL</code> 中提供了 <code>INSERT</code> 语句，来插入数据。</p><p>通常有以下 <code>3</code> 种应用场景：</p><ol><li>向表中插入一行</li><li>向表中插入多行</li><li>复制另一表中的数据以插入到现有表</li></ol><h2 id="插入一行数据" tabindex="-1">插入一行数据 <a class="header-anchor" href="#插入一行数据" aria-label="Permalink to &quot;插入一行数据&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (column1, column2, ...)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1, value2, ...);</span></span></code></pre></div><p>该语法有以下注意点：</p><ol><li><code>column</code> 与 <code>value</code> 是<strong>一一对应</strong>的，且总数量一致。</li><li>在插入新行之前，数据库系统检查所有完整性约束。例如，<code>FOREIGN KEY</code> 约束，<code>PRIMARY KEY</code> 约束，<code>CHECK</code> 约束和 <code>NOT NULL</code> 约束。如果违反了其中一个约束，数据库系统将发出错误并终止语句，而不向表中插入任何新行。</li><li>在插入新行时，如果未在 <code>INSERT</code> 语句中指定某一 <code>column</code> 与其对应 <code>value</code>，则该 <code>column</code> 将采取其<strong>默认值</strong>。</li><li>在插入新行时，如果定义的 <code>value</code> 数量超过了表格中的 <code>column</code>数，则会出现错误。</li></ol><p>如果 <code>value</code> 序列与 <code>column</code> 的顺序匹配，则可以省略指定 <code>column</code> 序列：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1, value2, ...)</span></span></code></pre></div><p>在这种场景下，如果存在<strong>自增长列</strong>，可以在<strong>对应位置</strong>赋值 <code>NULL</code> 以忽略它。自增长列，会自动赋值。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1, value2, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ...)</span></span></code></pre></div><h2 id="插入多行数据" tabindex="-1">插入多行数据 <a class="header-anchor" href="#插入多行数据" aria-label="Permalink to &quot;插入多行数据&quot;">​</a></h2><p>使用单个 <code>INSERT</code> 语句插入多行：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1, value2, ...),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       (value1, value2, ...),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       (value1, value2, ...);</span></span></code></pre></div><h2 id="复制表数据" tabindex="-1">复制表数据 <a class="header-anchor" href="#复制表数据" aria-label="Permalink to &quot;复制表数据&quot;">​</a></h2><p>复制表数据，需要 <code>INSERT</code> 与 <code>SELECT</code> 语句联用，而不再使用 <code>VALUES</code>。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table1 (column1, column2) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> condition1;</span></span></code></pre></div>`,17)]))}const E=a(n,[["render",t]]);export{r as __pageData,E as default};
