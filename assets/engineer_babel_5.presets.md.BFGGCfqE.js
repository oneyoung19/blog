import{_ as e,c as a,o,b0 as i}from"./chunks/framework.Ctc7-3V1.js";const k=JSON.parse('{"title":"presets","description":"","frontmatter":{"title":"presets"},"headers":[],"relativePath":"engineer/babel/5.presets.md","filePath":"engineer/babel/5.presets.md","lastUpdated":1748250635000}'),t={name:"engineer/babel/5.presets.md"};function l(n,s,p,d,c,r){return o(),a("div",null,s[0]||(s[0]=[i(`<p><strong>预设</strong> 是一组插件的集合。这是为了方便开发者在实际应用中无需再手动配置各类插件。</p><h2 id="官方预设" tabindex="-1">官方预设 <a class="header-anchor" href="#官方预设" aria-label="Permalink to &quot;官方预设&quot;">​</a></h2><p><code>babel</code> 官方已经提供了一些预设。</p><ul><li><code>@babel/preset-env</code></li><li><code>@babel/preset-flow</code></li><li><code>@babel/preset-react</code></li><li><code>@bbael/preset-typescript</code></li></ul><p><a href="https://www.npmjs.com/search?q=babel-preset" target="_blank" rel="noreferrer">更多预设</a></p><p>预设的使用配置跟插件的大致相同。</p><p>唯一要注意的是，<strong>预设的执行顺序与插件是相反的</strong>。</p><h2 id="babel-preset-env" tabindex="-1">@babel/preset-env <a class="header-anchor" href="#babel-preset-env" aria-label="Permalink to &quot;@babel/preset-env&quot;">​</a></h2><p>该预设可以称作环境预设。</p><p>提到环境，有非常重要的两点：<strong>代码转换</strong> 与 <strong>polyfill</strong>。恰好 <code>@babel/preset-env</code> 帮我们把这两件事都比较优雅的实现了。</p><p>又由于浏览器的版本众多，我们必须在使用预设的时候告诉它，我们的目标浏览器是什么及是什么版本。也就是需要设置 <code>browserslist</code>。</p><p>为了行文方便，本章节所有 <code>preset-env</code> 皆指代 <code>@babel/preset-env</code>。</p><h3 id="browserslist" tabindex="-1">browserslist <a class="header-anchor" href="#browserslist" aria-label="Permalink to &quot;browserslist&quot;">​</a></h3><p>在 <code>babel</code> 配合 <code>preset-env</code>使用，共有三种配置方法：</p><ol><li><code>.browserslistrc</code> 在项目根目录下添加 <code>.browserslistrc</code> 文件。要注意的是，该文件是全局配置。譬如如果项目有 <code>postcss</code>，那么它也会读取该文件。</li></ol><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; 1%</span></span>
<span class="line"><span>last 2 versions</span></span>
<span class="line"><span>not ie &lt;= 8</span></span></code></pre></div><ol start="2"><li><code>package.json</code> 中设置 <code>browserslist</code>。<strong>该配置在项目范围中的作用及优先级同上项</strong>。 数组形式：</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;browserslist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&gt; 1%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;last 2 versions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;not ie &lt;= 8&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>字符串形式：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;browserslist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt; 1%, last 2 versions, not ie &lt;= 8&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="3"><li>给预设 <code>@babel/preset-env</code> 设置 <code>target</code> 参数。<strong>优先级在这三者中最高</strong>。</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;presets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;@babel/preset-env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;targets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;&gt; 1%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;last 2 versions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;not ie &lt;= 8&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h2><p>下面是一些常见的设置属性。</p><ol><li><code>targets</code></li></ol><p><code>string | Array&lt;string&gt; | { [string]: string }</code>，defaults to <code>{}</code>。</p><p>用来设置目标浏览器。</p><ol start="2"><li><code>modules</code></li></ol><p><code>&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | &quot;cjs&quot; | &quot;auto&quot; | false</code>，defaults to <code>auto</code>。</p><p>用来设置转译后的代码采用何种模块化方式。设置为 <code>false</code>时，将保留采用 <code>ES Module</code>。</p><p>在 <code>webpack</code> 项目中，强烈建议设置为 <code>false</code>，将 <code>import</code> 交由 <code>webpack</code> 处理。</p><p>因为 <code>webpack</code> 可以对 <code>ES Module</code> 做 <code>tree shaking</code>。</p><ol start="3"><li><code>useBuiltIns</code></li></ol><p><code>&quot;usage&quot;| &quot;entry&quot; | false</code>。default to <code>false</code>。</p><p>用来配置 <code>preset-env</code> 如何处理 <code>polyfill</code>。</p><ul><li><code>&quot;usage&quot;</code> 自动按需导入。</li><li><code>&quot;entry&quot;</code> 入口文件处引入 <code>polyfill</code>，<code>preset-env</code> 会全量导入 <code>polyfill</code>。</li><li><code>false</code> 不再使用 <code>polyfill</code>。</li></ul><p>但 <code>preset-env</code> 并不内置 <code>polyfill</code>，它只是一系列插件的集合。所以我们在使用该配置属性前需要安装<code>@babel/polyfill</code>。</p><p><code>babel@7.4.0</code> 已开始弃用 <code>@babel/polyfill</code>。推荐使用<code>core-js</code>。当使用 <code>core-js</code> 时，需要配合下个属性进行设置。</p><ol start="4"><li><code>core-js</code></li></ol><p><code>2</code>, <code>3</code> or <code>{ version: 2 | 3, proposals: boolean }</code>, defaults to <code>2</code></p><p>用来配置 <code>core-js</code> 的版本。</p><p>当设置其版本为 <code>2</code> 或 <code>3</code> 时，需要对应安装 <code>core-js@2</code> 或 <code>core-js@3</code>。</p><ol start="5"><li><code>ignoreBrowserslistConfig</code></li></ol><p><code>Boolean</code>, defaults to <code>false</code>.</p><p>配置是否忽略 <code>browserslist</code> 文件及 <code>package.json</code> 中的 <code>browserslist</code> 键。</p>`,45)]))}const u=e(t,[["render",l]]);export{k as __pageData,u as default};
