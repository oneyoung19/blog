import{_ as t,c as l,o as i,b0 as e}from"./chunks/framework.D8aj9ziZ.js";const v=JSON.parse('{"title":"Java 编程语言入门指南","description":"","frontmatter":{"title":"Java 编程语言入门指南"},"headers":[],"relativePath":"BE/java/docs/index.md","filePath":"BE/java/docs/index.md","lastUpdated":1749892205000}'),o={name:"BE/java/docs/index.md"};function d(s,a,n,r,c,p){return i(),l("div",null,a[0]||(a[0]=[e(`<h2 id="一、java-概述" tabindex="-1">一、Java 概述 <a class="header-anchor" href="#一、java-概述" aria-label="Permalink to &quot;一、Java 概述&quot;">​</a></h2><p><code>Java</code> 作为一门经久不衰的编程语言，在软件开发领域占据着重要地位。让我们从以下几个维度来认识这门语言：</p><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Java 概述] --&gt; B[发展历程]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; C[核心优势]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; D[应用领域]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; E[技术架构]</span></span></code></pre></div><h2 id="二、java-发展历程" tabindex="-1">二、Java 发展历程 <a class="header-anchor" href="#二、java-发展历程" aria-label="Permalink to &quot;二、Java 发展历程&quot;">​</a></h2><p><code>Java</code> 的诞生源于一个富有远见的构想。1990年代初，<code>Sun</code> 公司的技术团队在詹姆斯·高斯林的带领下，开始研发一种面向智能家电的编程语言，最初命名为 <code>Oka</code>。虽然这个项目最初并未获得市场认可，但互联网的兴起为这门语言带来了新的机遇。</p><p>1995年，经过改造后的 <code>Oka</code> 以 <code>Java</code> 之名正式发布，开启了它的传奇之旅。2009年，<code>Oracle</code> 收购 <code>Sun</code> 公司，<code>Java</code> 成为 <code>Oracle</code> 的重要产品线。</p><p><code>Java</code> 的发展历程见证了编程语言的进化：</p><table tabindex="0"><thead><tr><th>版本</th><th>发布时间</th><th>里程碑特性</th></tr></thead><tbody><tr><td><code>JDK 1.0</code></td><td>1996年</td><td>奠定 <code>JVM</code> 基础架构</td></tr><tr><td><code>J2SE 1.2</code></td><td>1998年</td><td>确立三大平台架构</td></tr><tr><td><code>Java SE 5.0</code></td><td>2004年</td><td>引入泛型、枚举等现代特性</td></tr><tr><td><code>Java SE 8</code></td><td>2014年</td><td>函数式编程支持</td></tr><tr><td><code>Java SE 11</code></td><td>2018年</td><td>模块化系统完善</td></tr><tr><td><code>Java SE 17</code></td><td>2021年</td><td>最新 <code>LTS</code> 版本</td></tr></tbody></table><h2 id="三、java-的核心优势" tabindex="-1">三、Java 的核心优势 <a class="header-anchor" href="#三、java-的核心优势" aria-label="Permalink to &quot;三、Java 的核心优势&quot;">​</a></h2><ol><li><p><strong>跨平台能力</strong></p><ul><li>基于 <code>JVM</code> 的&quot;一次编写，到处运行&quot;特性</li><li>强大的可移植性，支持多种操作系统</li></ul></li><li><p><strong>丰富的生态系统</strong></p><ul><li>庞大的开发者社区</li><li>完善的第三方库支持</li><li>丰富的开发工具链</li></ul></li><li><p><strong>企业级特性</strong></p><ul><li>强大的并发处理能力</li><li>完善的安全机制</li><li>稳定的性能表现</li></ul></li></ol><h2 id="四、java-应用领域" tabindex="-1">四、Java 应用领域 <a class="header-anchor" href="#四、java-应用领域" aria-label="Permalink to &quot;四、Java 应用领域&quot;">​</a></h2><p><code>Java</code> 的应用场景极其广泛：</p><ol><li><p><strong>企业级应用</strong></p><ul><li>金融系统</li><li>电子商务平台</li><li>企业资源规划系统</li></ul></li><li><p><strong>移动开发</strong></p><ul><li><code>Android</code> 应用开发</li><li>企业移动解决方案</li></ul></li><li><p><strong>大数据与云计算</strong></p><ul><li><code>Hadoop</code> 生态系统</li><li>分布式系统开发</li></ul></li><li><p><strong>Web 开发</strong></p><ul><li>后端服务开发</li><li>微服务架构</li></ul></li></ol><h2 id="五、java-技术架构" tabindex="-1">五、Java 技术架构 <a class="header-anchor" href="#五、java-技术架构" aria-label="Permalink to &quot;五、Java 技术架构&quot;">​</a></h2><p><code>Java</code> 技术体系包含三个核心组件：</p><ol><li><p><strong>Java 语言规范</strong></p><ul><li>语法规则</li><li>编程范式</li><li>最佳实践</li></ul></li><li><p><strong>Java 虚拟机 (<code>JVM</code>)</strong></p><ul><li>字节码执行</li><li>内存管理</li><li>性能优化</li></ul></li><li><p><strong>Java 类库</strong></p><ul><li>标准库</li><li>扩展库</li><li>第三方库</li></ul></li></ol><p><code>Java</code> 平台分为三个主要版本：</p><ul><li><strong>Java SE</strong>: 标准版，面向桌面应用（<strong>核心学习版本</strong>）</li><li><strong>Java EE</strong>: 企业版，面向大型系统（<strong>已被 <code>Spring Boot</code> 取代</strong>）</li><li><strong>Java ME</strong>: 微型版，面向移动设备（<strong>已被 <code>Kotlin</code> 取代</strong>）</li></ul>`,18)]))}const g=t(o,[["render",d]]);export{v as __pageData,g as default};
