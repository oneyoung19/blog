import{_ as a,o as e,c as i,aP as t}from"./chunks/framework.D1yHhm2y.js";const k=JSON.parse('{"title":"简要介绍","description":"","frontmatter":{"title":"简要介绍"},"headers":[],"relativePath":"DB/oracle/index.md","filePath":"DB/oracle/index.md","lastUpdated":1735987451000}'),l={name:"DB/oracle/index.md"};function p(d,s,h,n,o,c){return e(),i("div",null,s[0]||(s[0]=[t('<p><code>Oracle</code> 是一种关系型数据库管理系统，由 <code>Oracle</code> 公司开发，是目前世界上使用最广泛的数据库管理系统之一。</p><p><code>Oracle</code> 是关系型数据库管理系统的先驱，它是第一个支持 <code>SQL</code> 的关系型数据库管理系统，也是第一个支持 <code>SQL</code> 的商业数据库管理系统。</p><p>官方文档：<a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/index.html" target="_blank" rel="noreferrer">https://docs.oracle.com/en/database/oracle/oracle-database/19/index.html</a></p><p>中文文档：<a href="https://www.yiibai.com/oracle" target="_blank" rel="noreferrer">https://www.yiibai.com/oracle</a></p><h2 id="与-mysql-的比较" tabindex="-1">与 <code>Mysql</code> 的比较 <a class="header-anchor" href="#与-mysql-的比较" aria-label="Permalink to &quot;与 `Mysql` 的比较&quot;">​</a></h2><p>在当前的互联网时代，<code>MySQL</code> 是最常见的<strong>开源</strong>数据库之一。</p><p>而 <code>Oracle</code> 相对来说，属于商业数据库，偏向于收费。一些旧项目或者一些大型项目中会使用到。</p><p>由于 <code>Oracle</code> 和 <code>Mysql</code> 同属于关系型数据库，所以在使用上有很多相似之处。</p><p><strong>譬如 <code>SQL</code> 语法在这俩数据库中是通用的，只有某些场景下的语法有所不同</strong>。</p><p>在金融行业中， <code>Oracle</code> 数据库是比较常见的选择，因为它能够满足复杂和高度安全的数据处理需求，包括高并发、高可靠性和高可扩展性等。</p><p>此外，<code>Oracle</code> 的安全性也是很受金融行业关注的。</p><p>对于一般的应用场景，<code>MySQL</code> 也是一种不错的选择，它更加轻量级，易于安装和维护，并且能够处理中小型的数据量。</p><p>此外，<code>MySQL</code> 还支持的存储引擎比较多，能够适应不同的需求。</p><p>而且，<code>MySQL</code> 也有着比 <code>Oracle</code> 更加开放、更加灵活和更加友好的开源社区。</p><p>因此，在一般的应用场景下，大多数都会选择 <code>MySQL</code>。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>以 <a href="https://www.oracle.com/database/technologies/oracle-database-software-downloads.html" target="_blank" rel="noreferrer">社区版</a> 为例，</p><p>你可以直接通过在上面的链接中下载安装包的方式进行安装。</p><p>或者在 <code>macos</code> 上利用 <code>Homebrew</code> 安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oracle</span></span></code></pre></div><p>由于 <code>Oracle</code> 数据库体积较大，推荐通过 <code>Docker</code> 安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store/oracle/database-enterprise:</span></span></code></pre></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>在本机上安装完成后，你可以通过下面的命令启动 <code>Oracle</code> 数据库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlplus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sysdba</span></span></code></pre></div><p>然后连接到数据库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sysdba</span></span></code></pre></div><p>如果是通过 <code>Docker</code> 安装的，你可以通过下面的命令启动 <code>Oracle</code> 数据库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1521:1521</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5500:5500</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store/oracle/database-enterprise:</span></span></code></pre></div><p>然后连接到数据库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">container_i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span></code></pre></div>',31)]))}const g=a(l,[["render",p]]);export{k as __pageData,g as default};
