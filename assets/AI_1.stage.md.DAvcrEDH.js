import{_ as d,c as e,o,b0 as a}from"./chunks/framework.D8aj9ziZ.js";const p=JSON.parse('{"title":"1.发展阶段","description":"","frontmatter":{"title":"1.发展阶段"},"headers":[],"relativePath":"AI/1.stage.md","filePath":"AI/1.stage.md","lastUpdated":1750216722000}'),r={name:"AI/1.stage.md"};function s(l,t,n,c,i,h){return o(),e("div",null,t[0]||(t[0]=[a(`<h1 id="_1-发展阶段" tabindex="-1">1.发展阶段 <a class="header-anchor" href="#_1-发展阶段" aria-label="Permalink to &quot;1.发展阶段&quot;">​</a></h1><h2 id="第一阶段-基于规则的聊天机器人-rule-based" tabindex="-1">第一阶段：基于规则的聊天机器人（Rule-Based） <a class="header-anchor" href="#第一阶段-基于规则的聊天机器人-rule-based" aria-label="Permalink to &quot;第一阶段：基于规则的聊天机器人（Rule-Based）&quot;">​</a></h2><p><strong>代表作</strong>：<code>ELIZA</code>（1966）</p><p><strong>原理</strong>：通过大量 <code>if-else</code> 规则 或 <strong>模式匹配</strong> 来&quot;应答&quot;</p><p><strong>能力</strong>：模拟心理医生，用模板回复你输入的句子</p><p><strong>示例</strong>：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>你说：&quot;我觉得很难过&quot;</span></span>
<span class="line"><span>它回复：&quot;为什么你觉得难过？&quot;</span></span></code></pre></div><p>这些机器人没有理解力，只是简单替换关键词。</p><h2 id="第二阶段-基于检索的问答系统-retrieval-based" tabindex="-1">第二阶段：基于检索的问答系统（Retrieval-based） <a class="header-anchor" href="#第二阶段-基于检索的问答系统-retrieval-based" aria-label="Permalink to &quot;第二阶段：基于检索的问答系统（Retrieval-based）&quot;">​</a></h2><p><strong>时间</strong>：<code>2000s</code> -<code>2010s</code></p><p><strong>原理</strong>：对用户输入用关键词搜索预定义的回答集合</p><p><strong>代表产品</strong>：早期客服机器人、<code>Siri</code> 初代</p><p><strong>缺点</strong>：回答死板、不通顺、无法泛化</p><h2 id="第三阶段-基于神经网络的对话生成模型-neural-dialogue-models" tabindex="-1">第三阶段：基于神经网络的对话生成模型（Neural Dialogue Models） <a class="header-anchor" href="#第三阶段-基于神经网络的对话生成模型-neural-dialogue-models" aria-label="Permalink to &quot;第三阶段：基于神经网络的对话生成模型（Neural Dialogue Models）&quot;">​</a></h2><p><strong>标志</strong>：使用深度学习模型来生成回复</p><ul><li><strong>Seq2Seq 模型</strong>（2014）：用在机器翻译，后来迁移到聊天任务</li><li><strong>代表作</strong>：Google 的 Smart Reply、Facebook 的 ParlAI</li></ul><p><strong>缺点</strong>：</p><ul><li>容易生成无意义或重复的回复（比如 &quot;I don&#39;t know&quot;、&quot;That&#39;s interesting.&quot;）</li><li>对上下文记忆很弱</li></ul><h2 id="💥-第四阶段-大语言模型-llm-驱动的对话系统" tabindex="-1">💥 第四阶段：大语言模型（LLM）驱动的对话系统 <a class="header-anchor" href="#💥-第四阶段-大语言模型-llm-驱动的对话系统" aria-label="Permalink to &quot;💥 第四阶段：大语言模型（LLM）驱动的对话系统&quot;">​</a></h2><table tabindex="0"><thead><tr><th>里程碑模型</th><th>发布时间</th><th>特点</th></tr></thead><tbody><tr><td><code>GPT-2</code></td><td><code>2019</code></td><td>开始展现通用文本生成能力，但没法聊天</td></tr><tr><td><code>GPT-3</code></td><td><code>2020</code></td><td>可对话、会写作，回答能力强大</td></tr><tr><td><code>InstructGPT</code></td><td><code>2022</code></td><td>会听指令，比 <code>GPT-3</code> 更&quot;听话&quot;</td></tr><tr><td><code>ChatGPT (GPT-3.5)</code></td><td><code>2022</code></td><td>专为多轮对话优化的 LLM，效果大幅提升</td></tr><tr><td><code>GPT-4</code></td><td><code>2023</code></td><td>支持多模态输入，逻辑更强，更安全</td></tr><tr><td><code>GPT-4o</code></td><td><code>2024</code></td><td>实时语音、图像理解，支持 <code>Function Calling</code> 和 <code>MCP</code></td></tr></tbody></table><h2 id="✅-演变趋势总结" tabindex="-1">✅ 演变趋势总结 <a class="header-anchor" href="#✅-演变趋势总结" aria-label="Permalink to &quot;✅ 演变趋势总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>阶段</th><th>特征</th><th>是否理解用户意图</th><th>是否能灵活生成</th></tr></thead><tbody><tr><td>规则机器人</td><td>模板匹配</td><td>❌</td><td>❌</td></tr><tr><td>检索机器人</td><td>查询库中答案</td><td>❌</td><td>❌</td></tr><tr><td>神经生成模型</td><td>自动生成文本</td><td>⚠️ 有限</td><td>✅ 一定程度</td></tr><tr><td><code>LLM（ChatGPT）</code></td><td>多轮理解 + 工具调用</td><td>✅ 很强</td><td>✅ 非常好</td></tr><tr><td><code>LLM</code> + <code>Function Calling</code> + <code>MCP</code></td><td>具备上下文、行动力、记忆能力</td><td>✅</td><td>✅+具备工具调用能力</td></tr></tbody></table>`,22)]))}const g=d(r,[["render",s]]);export{p as __pageData,g as default};
