import{_ as a,c as s,o as e,b0 as i}from"./chunks/framework.CEggy_nf.js";const u=JSON.parse('{"title":"nginx文件介绍","description":"","frontmatter":{"title":"nginx文件介绍"},"headers":[],"relativePath":"deploy/nginx/2.introduce.md","filePath":"deploy/nginx/2.introduce.md","lastUpdated":1744462650000}'),o={name:"deploy/nginx/2.introduce.md"};function p(l,n,t,c,d,r){return e(),s("div",null,n[0]||(n[0]=[i(`<h2 id="nginx目录" tabindex="-1">nginx目录 <a class="header-anchor" href="#nginx目录" aria-label="Permalink to &quot;nginx目录&quot;">​</a></h2><p>安装<code>nginx</code>之后。目录结构如下： <img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/main/img/007S8ZIlly1ghspg9r3emj30sy040jtt.jpg" alt="" loading="lazy"></p><p>介绍下每个目录或文件的作用：</p><ul><li><code>nginx.conf</code>: 主配置文件。</li><li><code>conf.d</code>: 自定义配置文件的目录。我们通常都会在该目录中存放自定义<code>nginx</code>配置文件。该目录中的<code>.conf</code>文件会被主配置文件<code>nginx.conf</code>以<code>include</code>形式导入。</li><li><code>mime.types</code>: 媒体类型。设置<code>Content-Type</code>与扩展名的对应关系。</li><li><code>koi-utf koi-win win-utf</code>: 编码转换映射转化文件。</li><li><code>logs</code>: 存放日志。</li><li><code>modules</code>: 依赖模块。</li><li><code>scgi_params uwscgi_params fastcgi_params</code>: cgi配置相关。</li></ul><h2 id="nginx配置结构" tabindex="-1">nginx配置结构 <a class="header-anchor" href="#nginx配置结构" aria-label="Permalink to &quot;nginx配置结构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>main        # 全局配置，对全局生效</span></span>
<span class="line"><span>├── events  # 配置影响 Nginx 服务器或与用户的网络连接</span></span>
<span class="line"><span>├── http    # 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置</span></span>
<span class="line"><span>│   ├── upstream # 配置后端服务器具体地址，负载均衡</span></span>
<span class="line"><span>│   ├── server   # 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块</span></span>
<span class="line"><span>│   ├── server</span></span>
<span class="line"><span>│   │   ├── location  # server 块可以包含多个 location 块，location 指令用于匹配 uri</span></span>
<span class="line"><span>│   │   ├── location</span></span>
<span class="line"><span>│   │   └── ...</span></span>
<span class="line"><span>│   └── ...</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><p>主配置文件： <img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/main/img/007S8ZIlly1ghsq1u5i4gj31960u0q68.jpg" alt="" loading="lazy"></p><p><code>conf.d</code>目录中的自定义配置文件： <img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/main/img/007S8ZIlly1ghsq3oy0duj31im0gugp5.jpg" alt="" loading="lazy"></p>`,8)]))}const m=a(o,[["render",p]]);export{u as __pageData,m as default};
