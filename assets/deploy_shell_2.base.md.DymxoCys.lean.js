import{_ as i,o as a,c as n,aP as l}from"./chunks/framework.DeCM12M7.js";const r=JSON.parse('{"title":"2.shell基础","description":"","frontmatter":{"title":"2.shell基础"},"headers":[],"relativePath":"deploy/shell/2.base.md","filePath":"deploy/shell/2.base.md","lastUpdated":1736401870000}'),e={name:"deploy/shell/2.base.md"};function p(h,s,t,k,d,c){return a(),n("div",null,s[0]||(s[0]=[l(`<h2 id="_2-1-数据类型" tabindex="-1">2-1.数据类型 <a class="header-anchor" href="#_2-1-数据类型" aria-label="Permalink to &quot;2-1.数据类型&quot;">​</a></h2><p>所有编程语言，都应该从<strong>区分数据类型</strong>开始。</p><p><code>shell</code>的数据类型有下面几种：</p><ul><li><p>字符串</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;jack&#39;</span></span></code></pre></div></li><li><p>整数型 <code>shell</code> 中的数字都是整数。不能声明变量是小数。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">19</span></span></code></pre></div></li><li><p>数组 <code>shell</code> 支持一维数组（不支持多维数组），并且没有限定数组的大小。用括号来表示数组，数组元素用空格符号分割开。</p><p>数组的话，分为两类：<strong>普通数组</strong>与<strong>关联数组</strong>。</p><p>普通数组是直接利用声明语句声明即可，无法自定义索引值。</p><p>关联数组则可以自定义索引值。</p><p>所有语法如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#普通数组直接声明即可。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v1&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;v2&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;v3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#下述所有方法 普通数组与关联数组的使用方式是一致的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#读取对应索引下的值 索引从0开始</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[0]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#读取全部索引下的值</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#获取指定索引后的所有值 获取从索引1开始的值，如下：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#获取指定索引后的固定个数的值 获取从索引1开始的3个值，如下：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#获取全部索引</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#获取数组长度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#列出当前环境下的所有数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p>不管是普通数组，还是关联数组，如果读取时没有指定索引，统一会取第一位索引的值。这一点与 <code>JavaScript</code> 语言有明显区别：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v1&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;v2&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;v3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#不会打印出&#39;v1 v2 v3&#39; 只会打印出&#39;v1&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#说明这一点的原因是 在使用for语句循环时 应该遍历的是\${arr[*]} 而不是\${arr}</span></span></code></pre></div><p>如果想要声明关联数组，需要使用 <code>declare -A</code> 语法。如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1.声明单个索引</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#这里如果不加这一行 declare -A的话，会报错 &#39;assignment to invalid subscript range&#39;.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr_1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr_1[name]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;jack&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr_1[gender]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;male&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr_1[name]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#2.声明整个数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr_2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;selina&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;female&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${arr_2[name]}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在 <code>macos</code> 上使用 <code>declare -A</code>，有可能报错：</p><p><code>declare: -A: invalid option</code></p><p><code>declare: usage: declare [-afFirtx] [-p] [name[=value] ...]</code></p><p>这是因为 <code>bash</code> 的版本问题，可以升级下版本或者使用 <code>zsh</code> 等。</p><p>可见<a href="https://stackoverflow.com/questions/27002192/bash-declare-a-does-not-work-on-macos" target="_blank" rel="noreferrer">stackoverflow</a></p></div></li></ul><h2 id="_2-2-自定义变量" tabindex="-1">2-2.自定义变量 <a class="header-anchor" href="#_2-2-自定义变量" aria-label="Permalink to &quot;2-2.自定义变量&quot;">​</a></h2><p>声明自定义变量，直接使用<strong>赋值语句</strong>即可。</p><p>使用自定义变量，需要加 <code>$</code> 进行读取。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;123&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">123</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#打印出来的都是字符串123 shell中没有数字的概念</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#更加友好的读取变量方式 推荐使用：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${a}</span></span></code></pre></div><p>删除自定义变量的话，可以使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>name=&#39;jack&#39;</span></span>
<span class="line"><span>unset name</span></span></code></pre></div><h2 id="_2-3-sh-文件" tabindex="-1">2-3.<code>.sh</code> 文件 <a class="header-anchor" href="#_2-3-sh-文件" aria-label="Permalink to &quot;2-3.\`.sh\` 文件&quot;">​</a></h2><p>一般，我们都会将 <code>shell</code> 命令放到 <code>.sh</code> 文件中。</p><p>需要现在文件头部声明使用什么样的 <code>shell</code>，譬如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PATH</span></span></code></pre></div><p><code>#!/bin/bash</code> 即使用 <code>bash</code>，当然也可以声明其他的 <code>shell</code>。</p><p>如果你在 <code>.sh</code> 文件内，想要使用注释的话，使用 <code>#</code> 即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#这是一行注释</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PATH</span></span></code></pre></div><h2 id="_2-4-文件执行" tabindex="-1">2-4.文件执行 <a class="header-anchor" href="#_2-4-文件执行" aria-label="Permalink to &quot;2-4.文件执行&quot;">​</a></h2><p><code>shell</code> 命令都会存在于以 <code>.sh</code> 为后缀的文件中。</p><p>执行 <code>sh</code> 文件有两种方式（假设当前目录下文件名为 <code>test.sh</code>）:</p><ul><li><p><code>./test.sh</code></p><p>这种方式，需要 <code>sh</code> 文件具有可执行权限。查看文件所有权限可利用 <code>ls -l</code>。如果没有执行权限的话，可利用 <code>chmod +x test.sh</code> 来给文件添加可执行权限。</p></li><li><p><code>sh test.sh</code></p><p>这种方式，无需 <code>sh</code> 文件具有可执行权限。因为这种方式，已经表明了利用 <code>shell</code> 来执行 <code>test.sh</code>。除此命令外，也可以使用 <code>bash test.sh</code> 或者 <code>zsh test.sh</code> 等等。</p><p>使用这种方式的话，可以不在 <code>.sh</code> 文件头部添加声明语句 <code>#!/bin/bash</code>。因为这种执行方式已经具体定义了使用哪种的 <code>shell</code>。</p></li></ul><h2 id="_2-5-参数变量" tabindex="-1">2-5.参数变量 <a class="header-anchor" href="#_2-5-参数变量" aria-label="Permalink to &quot;2-5.参数变量&quot;">​</a></h2><p>在执行 <code>sh</code> 文件时，可以在指令后面添加一些参数。</p><p>在 <code>shell</code> 内部能够通过对应变量来读取这些参数：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#假设执行命令为 &#39;sh test.sh jack&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#参数变量的总数量 因为参数只有一个jack 所以打印 &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $#</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#运行的脚本名称 打印 &#39;test.sh&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#第一个参数变量，$2、$3...以此类推，不存在的话打印空字符串，此处打印 &#39;jack&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $1</span></span></code></pre></div><h2 id="_2-6-特殊符号" tabindex="-1">2-6.特殊符号 <a class="header-anchor" href="#_2-6-特殊符号" aria-label="Permalink to &quot;2-6.特殊符号&quot;">​</a></h2><ul><li><p><code>~</code> 家目录。可使用 <code>cd ~</code>，快速进入家目录。</p></li><li><p><code>-</code> 上一次的目录。可使用 <code>cd -1</code> 或者 <code>cd -</code>，回退到上次目录。</p></li><li><p><code>!</code> 执行历史命令。<code>!!</code> 执行上次命令。可利用 <code>history</code> 查看历史命令列表。</p></li><li><p><code>$</code> 读取变量。</p></li><li><p><code>*</code> 通配符，匹配所有字符。如果需要使用乘法 <code>*</code>，需要利用转义字符 <code>\\</code> 将其转义。</p></li><li><p><code>?</code> 通配符，匹配除回车外的一个字符。</p></li><li><p><code>;</code> 命令之间用分号分割，多个命令在一行中时 可添加分号执行。</p></li><li><p><code>|</code> 管道符，上一个命令的输出作为下一个命令的输入。<code>cat filename | grep &quot;abc&quot;</code>。</p></li><li><p><code>\\</code> 转义字符。</p></li><li><p><code>+</code> 数学运算中的加法。</p></li><li><p><code>-</code> 数学运算中的减法。</p></li><li><p><code>*</code> 数学运算中的乘法。</p></li><li><p><code>/</code> 数学运算中的除法。</p></li><li><p><code>%</code> 数学运算中的取余。</p></li><li><p><code>**</code> 数学运算中的乘方。</p></li><li><p><code>shell</code> 内的引号分为 <code>3</code> 种：</p><ul><li><p>双引号 <code>&quot;&quot;</code></p><p>双引号，它相对宽松。会区分特殊字符：美元符号 <code>$</code>、反斜杠 <code>\\</code> 和反引号 \`\`。</p></li><li><p>单引号 <code>&#39;&#39;</code></p><p>单引号，可以认作<strong>严格模式</strong>。它不会区分特殊符号，统一作字符串处理。</p></li><li><p>反引号 \`\`</p><p>要求 <code>shell</code> 执行被它括起来的内容，例如执行 echo <code>pwd</code>，相当于直接执行 <code>pwd</code> 命令。</p></li></ul></li></ul><h2 id="_2-7-数学运算" tabindex="-1">2-7.数学运算 <a class="header-anchor" href="#_2-7-数学运算" aria-label="Permalink to &quot;2-7.数学运算&quot;">​</a></h2><p>数学运算有3中方法：</p><ul><li><code>expr</code><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#注意这里需要有空格，不能写成 expr 1+2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div></li><li><code>let</code><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;c = \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} + \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span></code></pre></div></li><li><code>$(())</code><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div></li></ul><p>注意，上述运算的小数运算有问题。可以安装第三方库 <code>bc</code> 进行支持。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>Macos</code> 下的包管理器是 <code>brew</code>，即 <code>HomeBrew</code>。</p><p><code>Centos</code>、<code>Redhat</code> 下的包管理器是 <code>yum</code>。</p><p><code>Ubuntu</code>、<code>Debian</code> 下的包管理器是 <code>apt-get</code>。</p></div><h2 id="_2-8-格式化输出" tabindex="-1">2-8.格式化输出 <a class="header-anchor" href="#_2-8-格式化输出" aria-label="Permalink to &quot;2-8.格式化输出&quot;">​</a></h2><p>相对于浏览器中的 <code>console.log</code>，<code>shell</code> 中的打印输出对应的是 <code>echo</code> 命令。</p><p>可利用 <code>man echo</code> 查看该命令对应的配置。</p><p>基本语法如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>echo(选项)(参数)</span></span></code></pre></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><ul><li><code>-n</code> 文本输出不换行。默认的 <code>echo</code> 在输出时末尾会自带一个换行符。</li><li><code>-e</code> 激活转义字符。使用 <code>-e</code> 选项时，若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出： <ul><li><code>\\a</code> 发出警告声;</li><li><code>\\b</code> 删除前一个字符；</li><li><code>\\c</code> 删除后面的字符，<code>\\c</code> 后面的字符不会输出;</li><li><code>\\f</code> 换行但光标仍旧停留在原来的位置；</li><li><code>\\n</code> 换行且光标移至行首；</li><li><code>\\r</code> 光标移至行首，但不换行；</li><li><code>\\t</code> 插入tab；</li><li><code>\\v</code> 与 <code>\\f</code> 相同；</li><li><code>\\\\</code> 插入 <code>\\</code> 字符;</li><li><code>\\nnn</code> 插入 <code>nnn</code>（八进制）所代表的 <code>ASCII</code> 字符。</li></ul></li></ul><h3 id="定制化文本" tabindex="-1">定制化文本 <a class="header-anchor" href="#定制化文本" aria-label="Permalink to &quot;定制化文本&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>echo -e &quot;\\033[字背景颜色；文字颜色m字符串\\033[0m&quot;</span></span></code></pre></div><ul><li><p>文字颜色 数值：<code>30</code> - <code>37</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[30m 黑色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[31m 红色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[32m 绿色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[33m 黄色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[34m 蓝色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[35m 紫色字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[36m 天蓝字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[37m 白色字 \\033[0m&quot;</span></span></code></pre></div></li><li><p>背景色 数值：<code>40</code> - <code>47</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[40;37m 黑底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[41;37m 红底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[42;37m 绿底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[43;37m 黄底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[44;37m 蓝底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[45;37m 紫底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[46;37m 天蓝底白字 \\033[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[47;30m 白底黑字 \\033[0m&quot;</span></span></code></pre></div></li><li><p>文字闪动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  \\33[0m 关闭所有属性 </span></span>
<span class="line"><span>  \\33[1m 设置高亮度 </span></span>
<span class="line"><span>  \\33[4m 下划线 </span></span>
<span class="line"><span>  \\33[5m 闪烁 </span></span>
<span class="line"><span>  \\33[7m 反显 </span></span>
<span class="line"><span>  \\33[8m 消隐 </span></span>
<span class="line"><span>  \\33[30m — \\33[37m 设置前景色 </span></span>
<span class="line"><span>  \\33[40m — \\33[47m 设置背景色 </span></span>
<span class="line"><span>  \\33[nA 光标上移n行 </span></span>
<span class="line"><span>  \\33[nB 光标下移n行 </span></span>
<span class="line"><span>  \\33[nC 光标右移n行 </span></span>
<span class="line"><span>  \\33[nD 光标左移n行 </span></span>
<span class="line"><span>  \\33[y;xH设置光标位置 </span></span>
<span class="line"><span>  \\33[2J 清屏 </span></span>
<span class="line"><span>  \\33[K 清除从光标到行尾的内容 </span></span>
<span class="line"><span>  \\33[s 保存光标位置 </span></span>
<span class="line"><span>  \\33[u 恢复光标位置 </span></span>
<span class="line"><span>  \\33[?25l 隐藏光标 </span></span>
<span class="line"><span>  \\33[?25h 显示光标</span></span></code></pre></div></li></ul><h2 id="_2-9-用户交互" tabindex="-1">2-9.用户交互 <a class="header-anchor" href="#_2-9-用户交互" aria-label="Permalink to &quot;2-9.用户交互&quot;">​</a></h2><p>在实际应用中，我们可能会与用户进行交互，需要用户输入一些值。这时就要使用 <code>read</code> 命令。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${name}</span></span></code></pre></div><p>直接这样使用，对用户不太友好。所以我们可以使用 <code>-p</code> 选项来对用户展示提示信息。<code>prompt</code> 的简写。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;请输入您的姓名：&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${name}</span></span></code></pre></div><p>除此之外，还有更多的选项可供使用：</p><ul><li><code>-n</code> 后跟一个数字，定义输入文本的长度。</li><li><code>-s</code> 在输入时不在屏幕上显示，例如输入密码时。</li><li><code>-t</code> 后面跟秒数，定义输入字符的等待时间。</li></ul>`,49)]))}const g=i(e,[["render",p]]);export{r as __pageData,g as default};
