import{_ as i,c as a,o as n,b0 as e}from"./chunks/framework.CEggy_nf.js";const r=JSON.parse('{"title":"38.punycode","description":"","frontmatter":{"title":"38.punycode"},"headers":[],"relativePath":"BE/node/docs/38.punycode.md","filePath":"BE/node/docs/38.punycode.md","lastUpdated":1746186030000}'),p={name:"BE/node/docs/38.punycode.md"};function l(t,s,h,d,k,o){return n(),a("div",null,s[0]||(s[0]=[e(`<p><em><code>Deprecated</code></em></p><p><a href="./">https://nodejs.org/docs/latest/api/punycode.html</a></p><p><code>Punycode</code> 是一种特殊的编码方式，用于将 <code>Unicode</code> 字符串转换为 <code>ASCII</code> 字符串，主要应用于国际化域名 (<code>IDN</code>, <code>Internationalized Domain Name</code>) 的表示。</p><p>由于传统的 <code>DNS</code> 系统只支持 <code>ASCII</code> 字符，所以 <code>Punycode</code> 提供了一种方式，将包含非 <code>ASCII</code> 字符的域名转化为 <code>DNS</code> 可以识别的形式。</p><p>不过在 <code>Node.js v7.0.0</code> 及以后，这个模块已经被弃用，转而建议使用 <code>url</code> 模块中的 <code>URL</code> 类来处理 <code>IDN</code>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const punycode = require(&#39;punycode&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 编码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const ascii = punycode.encode(&#39;你好&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(ascii)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 输出类似于 &#39;w658h&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 解码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const unicode = punycode.decode(&#39;w658h&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(unicode)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 输出 &#39;你好&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 编码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://你好.example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myURL.hostname) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 &#39;xn--6qq79v.example&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const decoded = new URL(&#39;https://xn--6qq79v.example&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// console.log(decoded)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 输出 &#39;你好.example&#39;</span></span></code></pre></div>`,6)]))}const y=i(p,[["render",l]]);export{r as __pageData,y as default};
