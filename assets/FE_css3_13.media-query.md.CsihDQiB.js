import{_ as i,c as a,o as e,b0 as n}from"./chunks/framework.CEggy_nf.js";const c=JSON.parse('{"title":"13.Media Query","description":"","frontmatter":{"title":"13.Media Query"},"headers":[],"relativePath":"FE/css3/13.media-query.md","filePath":"FE/css3/13.media-query.md","lastUpdated":1747214153000}'),t={name:"FE/css3/13.media-query.md"};function l(p,s,h,d,k,r){return e(),a("div",null,s[0]||(s[0]=[n(`<p><code>Media Query</code> 意为<strong>媒体查询</strong>。</p><p>它可以用来根据设备类型来实现样式兼容或其他自定义配置。</p><p>我们在开发中更多利用其实现<strong>响应式布局</strong>。</p><h2 id="_13-1-media-type" tabindex="-1">13-1.Media Type <a class="header-anchor" href="#_13-1-media-type" aria-label="Permalink to &quot;13-1.Media Type&quot;">​</a></h2><p><code>Media Type</code> 意为<strong>媒体类型</strong>。</p><p>有以下四种选项：</p><ol><li><code>all</code> 适用于所有类型。</li><li><code>print</code> 适用于打印机和打印预览。</li><li><code>screen</code> 适用于电脑屏幕、平板电脑、智能手机等。</li><li><code>speech</code> 适用于屏幕阅读器。</li></ol><h2 id="_13-2-media-feature" tabindex="-1">13-2.Media Feature <a class="header-anchor" href="#_13-2-media-feature" aria-label="Permalink to &quot;13-2.Media Feature&quot;">​</a></h2><p><code>Media Feature</code> 意为<strong>媒体特性</strong>。</p><p>我们在<strong>响应式布局</strong>中常用的有以下：</p><ul><li><code>min-width</code> 定义输出设备中的页面最小可见区域宽度。</li><li><code>max-width</code> 定义输出设备中的页面最大可见区域宽度。</li><li><code>min-height</code> 定义输出设备中的页面最小可见区域高度。</li><li><code>max-height</code> 定义输出设备中的页面最大可见区域高度。</li></ul><p>更多特性可见<a href="https://www.cnblogs.com/ajaemp/p/12943792.html" target="_blank" rel="noreferrer">这篇文章</a></p><h2 id="_13-3-media-query" tabindex="-1">13-3.Media Query <a class="header-anchor" href="#_13-3-media-query" aria-label="Permalink to &quot;13-3.Media Query&quot;">​</a></h2><p>媒体查询的基本语法为：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (feature) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (feature) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>譬如：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 正常样式 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">darkorange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 媒体查询样式 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">768</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dodgerblue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>媒体查询样式必须写在正常样式的下方，才会起作用。</p></div>`,18)]))}const E=i(t,[["render",l]]);export{c as __pageData,E as default};
