import{_ as l,o as t,c as r,aP as o}from"./chunks/framework.D1yHhm2y.js";const m=JSON.parse('{"title":"移动端适配","description":"","frontmatter":{"title":"移动端适配"},"headers":[],"relativePath":"cross/h5/flexible.md","filePath":"cross/h5/flexible.md","lastUpdated":1736066633000}'),a={name:"cross/h5/flexible.md"};function c(s,e,i,p,d,n){return t(),r("div",null,e[0]||(e[0]=[o('<p>大方向来说，移动端适配的方式分为 <code>3</code> 种：</p><ol><li>媒体查询 <code>@media</code></li><li><code>rem</code> 布局</li><li><code>viewport</code></li></ol><p>珠玉在前，笔者整理了一些这方面的文章，留待日后查阅。</p><p><a href="https://github.com/fengshi123/blog" target="_blank" rel="noreferrer">风逝</a>的<a href="https://juejin.cn/post/7046169975706353701" target="_blank" rel="noreferrer">2022 年移动端适配方案指南 — 全网最新最全</a>写得很全面。</p><p>还有<a href="https://www.w3cplus.com/" target="_blank" rel="noreferrer">大漠</a>产出的两篇：</p><ol><li><a href="https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html" target="_blank" rel="noreferrer">使用Flexible实现手淘H5页面的终端适配</a>之 <code>lib-flexible</code></li><li><a href="https://www.w3cplus.com/css/vw-for-layout.html" target="_blank" rel="noreferrer">再聊移动端页面的适配</a>之 <code>viewport</code></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>大漠的两篇文章在 <code>w3cplus</code> 是付费的，如果读者觉得有门槛，可以全网搜一下免费版本。当然也可以支持一下，请喝一杯咖啡。</p></div>',7)]))}const h=l(a,[["render",c]]);export{m as __pageData,h as default};
