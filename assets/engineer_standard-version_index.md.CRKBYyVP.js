import{_ as i,c as a,o as n,b1 as t}from"./chunks/framework.BbHYEPU-.js";const o=JSON.parse('{"title":"Standard Version","description":"","frontmatter":{"title":"Standard Version"},"headers":[],"relativePath":"engineer/standard-version/index.md","filePath":"engineer/standard-version/index.md","lastUpdated":1752754176000}'),e={name:"engineer/standard-version/index.md"};function l(h,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<p><code>standard-version</code> 是一个自动对项目更新版本号、生成日志、版本标记的工具。</p><p>笔者以<a href="https://www.npmjs.com/package/standard-version" target="_blank" rel="noreferrer">standard-version@^9.5.0</a>为例进行调试。</p><h2 id="_1-使用步骤" tabindex="-1">1.使用步骤 <a class="header-anchor" href="#_1-使用步骤" aria-label="Permalink to &quot;1.使用步骤&quot;">​</a></h2><ol><li><p>项目需要遵循<a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits Specification</a>；</p></li><li><p>安装并直接执行 <code>standard-version</code>。</p></li></ol><p>上述命令默认会执行 <code>4</code> 个阶段：</p><ol><li><code>bump</code> 自动升级版本号（<code>fix</code> 升级 <code>patch</code>，<code>feat</code> 升级 <code>minor</code>）</li><li><code>changelog</code> 根据 <code>Conventional Commits Specification</code> 生成新版本的日志文件</li><li><code>commit</code> 提交本地更改</li><li><code>tag</code> 生成版本标记</li></ol><h2 id="_2-参数详解" tabindex="-1">2.参数详解 <a class="header-anchor" href="#_2-参数详解" aria-label="Permalink to &quot;2.参数详解&quot;">​</a></h2><p>除了上述的自动版本升级，也可以使用如下指令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 首次发布版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">standard-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --first-release</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 手动指定发布版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">standard-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release-as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">major</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">minor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>更多参数可以使用 <code>standard-version -h</code> 查看：</p><p><img src="https://raw.githubusercontent.com/oneyoung19/vuepress-blog-img/Not-Count-Contribution/img/20231130205525.png" alt="" loading="lazy"></p><h2 id="_3-配置文件" tabindex="-1">3.配置文件 <a class="header-anchor" href="#_3-配置文件" aria-label="Permalink to &quot;3.配置文件&quot;">​</a></h2><p>我们可以在<strong>项目根目录</strong>下定义一个 <code>.versionrc.js</code> 配置文件，其中可以配置上一节图片中列出的 <code>Preset Configuration</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .versionrc.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	types: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;feat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;✨ Features | 新功能&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fix&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;🐛 Bug Fixes | Bug 修复&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;init&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;🎉 Init | 初始化&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;✏️ Documentation | 文档&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;style&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;💄 Styles | 风格&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;refactor&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;♻️ Code Refactoring | 代码重构&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;⚡ Performance Improvements | 性能优化&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;✅ Tests | 测试&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;revert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;⏪ Revert | 回退&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hidden: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;build&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;📦‍ Build System | 打包构建&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chore&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;🚀 Chore | 构建/工程依赖/工具&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ci&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, section: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;👷 Continuous Integration | CI 配置&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 默认值: &quot;chore(release): {{currentTag}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	releaseCommitMessageFormat: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{currentTag}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 跳过某步骤 可设置 bump changelog commit tag</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	skip: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// changelog: true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>后续执行 <code>standard-version</code> 相关命令时，会自动读取该文件。</p><h2 id="_4-参考文章" tabindex="-1">4.参考文章 <a class="header-anchor" href="#_4-参考文章" aria-label="Permalink to &quot;4.参考文章&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/7020289124993073189" target="_blank" rel="noreferrer">standard-version使用</a></li><li><a href="https://juejin.cn/post/7000702195758792718" target="_blank" rel="noreferrer">standard version 自动化</a></li><li><a href="https://github.com/BestDingSheng/learn-standard-version" target="_blank" rel="noreferrer">learn-standard-version</a></li><li><a href="https://jianshu.com/p/acfdd4ca0104" target="_blank" rel="noreferrer">standard-version 自动化</a></li><li><a href="https://segmentfault.com/a/1190000039813329" target="_blank" rel="noreferrer">自动产出changelog-第二节：自动产出</a></li></ul>`,18)]))}const g=i(e,[["render",l]]);export{o as __pageData,g as default};
