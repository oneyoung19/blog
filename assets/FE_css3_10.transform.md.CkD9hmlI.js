import{_ as c,c as d,o as r,b0 as t,j as e,a as o}from"./chunks/framework.CEggy_nf.js";const b=JSON.parse('{"title":"10.Transform","description":"","frontmatter":{"title":"10.Transform"},"headers":[],"relativePath":"FE/css3/10.transform.md","filePath":"FE/css3/10.transform.md","lastUpdated":1744257956000}'),s={name:"FE/css3/10.transform.md"};function n(l,a,i,p,h,f){return r(),d("div",null,a[0]||(a[0]=[t('<p>该属性意为<strong>变换、转换</strong>。</p><p>其主要有以下几方面：</p><ol><li><code>translate</code> <strong>平移</strong>，具体可分为 <code>translateX</code>、<code>translateY</code>、 <code>translateZ</code>。</li><li><code>scale</code> <strong>缩放</strong>，具体可分为 <code>scaleX</code>、<code>scaleY</code>、<code>scaleZ</code>。</li><li><code>rotate</code> <strong>旋转</strong>，具体可分为 <code>rotateX</code>、<code>rotateY</code>、<code>rotateZ</code>。</li><li><code>skew</code> <strong>倾斜</strong>。</li></ol><p>另外，<code>transform</code> 的效果还分为 <code>2D</code> 平面和 <code>3D</code> 立体。</p><p><code>2D</code> 的坐标系有 <code>x</code> 轴和 <code>y</code> 轴。</p><p>而 <code>3D</code> 的坐标系则有 <code>x</code> 轴、<code>y</code> 轴以及 <code>z</code> 轴。</p><h2 id="_10-1-transform-origin" tabindex="-1">10-1.Transform Origin <a class="header-anchor" href="#_10-1-transform-origin" aria-label="Permalink to &quot;10-1.Transform Origin&quot;">​</a></h2><p><code>transform-origin</code> 属性用来设置 <code>transform</code> 的<strong>原点</strong>。</p><p>默认是 <code>(50%, 50%, 0)</code> 坐标点。</p><h2 id="_10-2-transform-2d" tabindex="-1">10-2.Transform 2D <a class="header-anchor" href="#_10-2-transform-2d" aria-label="Permalink to &quot;10-2.Transform 2D&quot;">​</a></h2><p><code>Transform 2D</code> 指的就是 <code>2D</code> 平面下的<strong>变换、转换</strong>。</p><p>需要补充的一点是，<code>translate</code>、<code>scale</code>、<code>rotate</code> 这三者都有 <code>z</code> 轴，即对应的 <code>translateZ</code>、<code>scaleZ</code>、<code>rotateZ</code>。</p><p>而 <code>skew</code> 则没有 <code>skewZ</code> 这种用法。</p><h3 id="_10-2-1-translate" tabindex="-1">10-2-1.translate <a class="header-anchor" href="#_10-2-1-translate" aria-label="Permalink to &quot;10-2-1.translate&quot;">​</a></h3><p>我们来比较下，<code>translate</code> 的实际效果：</p>',15),e("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"test",src:"https://codepen.io/code1994/embed/RwQJLZr?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[o(" See the Pen "),e("a",{href:"https://codepen.io/code1994/pen/RwQJLZr"}," test"),o(" by Code1994 ("),e("a",{href:"https://codepen.io/code1994"},"@code1994"),o(") on "),e("a",{href:"https://codepen.io"},"CodePen"),o(". ")],-1),t('<p>可以注意到，<code>translateZ</code> 在当前代码下并无效果，其他属性的效果正常。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>translateZ</code> 不能使用百分比设置值，而 <code>translateX</code>、<code>translateY</code> 能够设置百分比，其相对的是自身宽和高。</p></div><h3 id="_10-2-2-scale" tabindex="-1">10-2-2.scale <a class="header-anchor" href="#_10-2-2-scale" aria-label="Permalink to &quot;10-2-2.scale&quot;">​</a></h3><p><code>scale</code> 的实际效果：</p>',4),e("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"scale",src:"https://codepen.io/code1994/embed/ExQRwJq?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[o(" See the Pen "),e("a",{href:"https://codepen.io/code1994/pen/ExQRwJq"}," scale"),o(" by Code1994 ("),e("a",{href:"https://codepen.io/code1994"},"@code1994"),o(") on "),e("a",{href:"https://codepen.io"},"CodePen"),o(". ")],-1),e("p",null,[o("可以注意到，"),e("code",null,"scaleZ"),o(" 在当前代码下并无效果，其他属性的效果正常。")],-1),e("h3",{id:"_10-2-3-rotate",tabindex:"-1"},[o("10-2-3.rotate "),e("a",{class:"header-anchor",href:"#_10-2-3-rotate","aria-label":'Permalink to "10-2-3.rotate"'},"​")],-1),e("p",null,[e("code",null,"rotate"),o(" 的实际效果：")],-1),e("iframe",{height:"319.87109375",style:{width:"100%"},scrolling:"no",title:"rotate",src:"https://codepen.io/code1994/embed/qBxKVWO?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[o(" See the Pen "),e("a",{href:"https://codepen.io/code1994/pen/qBxKVWO"}," rotate"),o(" by Code1994 ("),e("a",{href:"https://codepen.io/code1994"},"@code1994"),o(") on "),e("a",{href:"https://codepen.io"},"CodePen"),o(". ")],-1),t(`<p>可以注意到，<code>rotateZ</code> 在当前代码下有效果，其他属性的效果也正常。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>rotate</code> 属性会改变 <code>x</code> <code>y</code> <code>z</code> 的坐标系指向。</p><p>所以在需要使用 <code>transform</code> 组合属性的情况下，可以先使用 <code>translate</code> 等属性，最后使用 <code>rotate</code>。</p><p>譬如：<code>transform: translateX(50px) rotate(90deg);</code></p></div><h3 id="_10-2-4-skew" tabindex="-1">10-2-4.skew <a class="header-anchor" href="#_10-2-4-skew" aria-label="Permalink to &quot;10-2-4.skew&quot;">​</a></h3><p><code>skew</code> 的实际效果：</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="vYdrWdW" data-user="code1994" style="height:300px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;"><span>See the Pen <a href="https://codepen.io/code1994/pen/vYdrWdW"> Untitled</a> by Code1994 (<a href="https://codepen.io/code1994">@code1994</a>) on <a href="https://codepen.io">CodePen</a>.</span></p><p>可以注意到，<code>skewZ</code> 在当前代码下并无效果，其他属性的效果正常。</p><h2 id="_10-3-transform-3d" tabindex="-1">10-3.Transform 3D <a class="header-anchor" href="#_10-3-transform-3d" aria-label="Permalink to &quot;10-3.Transform 3D&quot;">​</a></h2><p><code>Transform 3D</code> 指的就是 <code>3D</code> 立体下的<strong>变换、转换</strong>。</p><p>为了实现 <code>3D</code> 效果，除了基础的 <code>transform</code> 属性之外，还需要一些额外属性的配合。</p><p>本节将主要介绍该系列属性。</p><p>如下是一个 <code>3D</code> 效果的旋转正方体：</p><p class="codepen" data-height="548.859375" data-default-tab="html,result" data-slug-hash="MWQXOBW" data-user="code1994" style="height:548.859375px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;"><span>See the Pen <a href="https://codepen.io/code1994/pen/MWQXOBW"> transform-3d-cube</a> by Code1994 (<a href="https://codepen.io/code1994">@code1994</a>) on <a href="https://codepen.io">CodePen</a>.</span></p><h3 id="_10-3-1-perspective" tabindex="-1">10-3-1.perspective <a class="header-anchor" href="#_10-3-1-perspective" aria-label="Permalink to &quot;10-3-1.perspective&quot;">​</a></h3><p><code>perspective</code> 意为<strong>视角</strong>。</p><p>该属性用来声明<strong>观察者视角与元素</strong>之间的距离。</p><p>通常建议设置在 <code>1000px</code> 至 <code>2000px</code> 之间。</p><p>该属性有两种使用方式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 声明在最外层容器上。这样，内部的所有元素都将在 \`3d\` 视角下渲染 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">perspective: 1000px;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 当perspective与transform属性作用于同一元素 使用下列用法 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform: perspective(1000px) translateZ(300px);</span></span></code></pre></div><p>以 <code>translateZ</code> 为例：</p>`,19),e("iframe",{height:"372.64453125",style:{width:"100%"},scrolling:"no",title:"perspective",src:"https://codepen.io/code1994/embed/ExQRbqW?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[o(" See the Pen "),e("a",{href:"https://codepen.io/code1994/pen/ExQRbqW"}," perspective"),o(" by Code1994 ("),e("a",{href:"https://codepen.io/code1994"},"@code1994"),o(") on "),e("a",{href:"https://codepen.io"},"CodePen"),o(". ")],-1),t('<p>可以看到，<code>transform</code> 在加上了 <code>perspective</code> 之后，就有了移动 <code>z</code> 轴距离的视觉效果。</p><h3 id="_10-3-2-perspective-origin" tabindex="-1">10-3-2.perspective-origin <a class="header-anchor" href="#_10-3-2-perspective-origin" aria-label="Permalink to &quot;10-3-2.perspective-origin&quot;">​</a></h3><p><code>perspective-origin</code> 属性，我将其理解为<strong>视点</strong>。</p><p>更白话的讲，可以将其理解为<strong>人眼的观察位置</strong>。</p><blockquote><p>perspective-origin: x, y;</p></blockquote><p>其中 <code>x</code> 是相对于 <code>x</code> 轴<strong>原点</strong>的距离，<code>y</code> 是相对于 <code>y</code> 轴<strong>原点</strong>的距离。</p><h3 id="_10-3-3-transform-style" tabindex="-1">10-3-3.transform-style <a class="header-anchor" href="#_10-3-3-transform-style" aria-label="Permalink to &quot;10-3-3.transform-style&quot;">​</a></h3><p><code>transform-style</code> 设置元素的子元素是位于 <code>3D</code> 空间中还是平面中。</p><blockquote><p>transform-style: preserve-3d | flat;</p></blockquote><p>其可设置的值如下：</p><ol><li><code>flat</code>: <strong>默认值</strong>，元素的子元素将位于平面中。</li><li><code>preserve-3d</code>: 元素的子元素将位于 <code>3D</code> 空间中。</li></ol><h3 id="_10-3-4-backface-visibility" tabindex="-1">10-3-4.backface-visibility <a class="header-anchor" href="#_10-3-4-backface-visibility" aria-label="Permalink to &quot;10-3-4.backface-visibility&quot;">​</a></h3><p><code>backface-visibility</code> 属性指定当元素背面朝向观察者时是否可见。</p><blockquote><p>backface-visibility: visible | hidden;</p></blockquote><p>其可设置的值如下：</p><ol><li><code>visible</code>: <strong>默认值</strong>，背面朝向用户时可见。</li><li><code>hidden</code>: 背面朝向用户时不可见。</li></ol>',16)]))}const g=c(s,[["render",n]]);export{b as __pageData,g as default};
