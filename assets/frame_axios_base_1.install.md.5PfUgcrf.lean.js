import{_ as i,o as s,c as o,aP as t}from"./chunks/framework.DeCM12M7.js";const k=JSON.parse('{"title":"1.install","description":"","frontmatter":{"title":"1.install"},"headers":[],"relativePath":"frame/axios/base/1.install.md","filePath":"frame/axios/base/1.install.md","lastUpdated":1736930820000}'),a={name:"frame/axios/base/1.install.md"};function d(l,e,c,n,r,p){return s(),o("div",null,e[0]||(e[0]=[t('<p><a href="https://axios-http.com/" target="_blank" rel="noreferrer">Axios官网</a></p><p><code>Axios</code> 是目前最主流的前端 <code>http</code> 通讯库。</p><p><code>Axios</code> 基于 <code>promise</code>，并且同时支持 <code>browser</code> 和 <code>node</code> 环境。</p><p>在 <code>browser</code> 环境下，<code>Axios</code> 利用的是 <code>XMLHttpRequest</code>。</p><p>在 <code>node</code> 环境，<code>Axios</code> 利用的是其自带的 <code>http</code> 模块。</p><p>如果要用一句话，来介绍 <code>Axios</code> 的话：</p><p><strong><code>Promise based HTTP client for the browser and node.js</code></strong></p><h2 id="_1-1-特性" tabindex="-1">1-1.特性 <a class="header-anchor" href="#_1-1-特性" aria-label="Permalink to &quot;1-1.特性&quot;">​</a></h2><ul><li><code>Make XMLHttpRequests from the browser</code></li><li><code>Make http requests from node.js</code></li><li><code>Supports the Promise API</code></li><li><code>Intercept request and response</code></li><li><code>Transform request and response data</code></li><li><code>Cancel requests</code></li><li><code>Timeouts</code></li><li><code>Query parameters serialization with support for nested entries</code></li><li><code>Automatic request body serialization to:</code><ul><li><code>JSON (application/json)</code></li><li><code>URL encoded form (application/x-www-form-urlencoded)</code></li><li><code>Multipart / FormData (multipart/form-data)</code></li></ul></li><li><code>Posting HTML forms as JSON</code></li><li><code>Automatic JSON data handling in response</code></li><li><code>Progress capturing for browsers and node.js with extra info (speed rate, remaining time)</code></li><li><code>Setting bandwidth limits for node.js</code></li><li><code>Compatible with spec-compliant FormData and Blob (including node.js)</code></li><li><code>Client side support for protecting against XSRF</code></li></ul><h2 id="_1-2-安装" tabindex="-1">1-2.安装 <a class="header-anchor" href="#_1-2-安装" aria-label="Permalink to &quot;1-2.安装&quot;">​</a></h2><p>直接利用 <code>yarn</code> 安装依赖：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> axios</span></span></code></pre></div><p>或者，在浏览器端，利用 <code>script</code> 标签引入 <code>cdn</code>：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>',14)]))}const m=i(a,[["render",d]]);export{k as __pageData,m as default};
